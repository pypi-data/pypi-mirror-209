#!/usr/bin/env python3
# This file is placed in the Public Domain.
# pylint: disable=C,I,R,W,E0611,E0402


__author__ = "B.H.J. Thate <thatebhj@gmail.com>"
__version__ = 1


import getpass
import pwd
import os
import sys
import termios
import time
import traceback


from opr.clients import Client
from opr.command import command, scan
from opr.errored import Errors
from opr.loggers import Logging
from opr.message import parse
from opr.objects import update
from opr.persist import Persist
from opr.threads import launch


from operbot.modules import cmd, irc, log, rss, tdo


Persist.workdir = "/var/lib/operbot/"


scan(cmd)
scan(irc)
scan(log)
scan(rss)
scan(tdo)


def daemon():
    pid = os.fork()
    if pid != 0:
        os._exit(0)
    os.setsid()
    os.umask(0)
    sis = open('/dev/null', 'r')
    os.dup2(sis.fileno(), sys.stdin.fileno())
    sos = open('/dev/null', 'a+')
    ses = open('/dev/null', 'a+')
    os.dup2(sos.fileno(), sys.stdout.fileno())
    os.dup2(ses.fileno(), sys.stderr.fileno())


def waiter():
    got = []
    for ex in Errors.errors:
        if not Cfg.silent:
            traceback.print_exception(type(ex), ex, ex.__traceback__)
        got.append(ex)
    for exc in got:
        Errors.errors.remove(exc)


def wrap(func):
    fds = sys.stdin.fileno()
    gotterm = True
    try:
        old = termios.tcgetattr(fds)
    except termios.error:
        gotterm = False
    try:
        func()
    except (EOFError, KeyboardInterrupt):
        print('')
    finally:
        if gotterm:
            termios.tcsetattr(fds, termios.TCSADRAIN, old)
        waiter()


def main():
    daemon()
    irc.start()
    rss.start()
    while 1:
        time.sleep(1.0)
        waiter()


if __name__ == "__main__":
    wrap(main)
