# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .inquiries_list_all_response_data_item_relationships_account import (
    InquiriesListAllResponseDataItemRelationshipsAccount,
)
from .inquiries_list_all_response_data_item_relationships_reports import (
    InquiriesListAllResponseDataItemRelationshipsReports,
)
from .inquiries_list_all_response_data_item_relationships_sessions import (
    InquiriesListAllResponseDataItemRelationshipsSessions,
)
from .inquiries_list_all_response_data_item_relationships_template import (
    InquiriesListAllResponseDataItemRelationshipsTemplate,
)
from .inquiries_list_all_response_data_item_relationships_verifications import (
    InquiriesListAllResponseDataItemRelationshipsVerifications,
)


class InquiriesListAllResponseDataItemRelationships(pydantic.BaseModel):
    account: typing.Optional[InquiriesListAllResponseDataItemRelationshipsAccount]
    template: typing.Optional[InquiriesListAllResponseDataItemRelationshipsTemplate]
    reports: typing.Optional[InquiriesListAllResponseDataItemRelationshipsReports]
    verifications: typing.Optional[InquiriesListAllResponseDataItemRelationshipsVerifications]
    sessions: typing.Optional[InquiriesListAllResponseDataItemRelationshipsSessions]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
