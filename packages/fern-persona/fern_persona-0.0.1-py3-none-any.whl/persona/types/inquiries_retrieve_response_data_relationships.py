# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .inquiries_retrieve_response_data_relationships_account import InquiriesRetrieveResponseDataRelationshipsAccount
from .inquiries_retrieve_response_data_relationships_reports import InquiriesRetrieveResponseDataRelationshipsReports
from .inquiries_retrieve_response_data_relationships_sessions import InquiriesRetrieveResponseDataRelationshipsSessions
from .inquiries_retrieve_response_data_relationships_template import InquiriesRetrieveResponseDataRelationshipsTemplate
from .inquiries_retrieve_response_data_relationships_verifications import (
    InquiriesRetrieveResponseDataRelationshipsVerifications,
)


class InquiriesRetrieveResponseDataRelationships(pydantic.BaseModel):
    account: typing.Optional[InquiriesRetrieveResponseDataRelationshipsAccount]
    template: typing.Optional[InquiriesRetrieveResponseDataRelationshipsTemplate]
    reports: typing.Optional[InquiriesRetrieveResponseDataRelationshipsReports]
    verifications: typing.Optional[InquiriesRetrieveResponseDataRelationshipsVerifications]
    sessions: typing.Optional[InquiriesRetrieveResponseDataRelationshipsSessions]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
