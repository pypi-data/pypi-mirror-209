# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['semantha_sdk',
 'semantha_sdk.api',
 'semantha_sdk.model',
 'semantha_sdk.request',
 'semantha_sdk.response',
 'semantha_sdk.rest']

package_data = \
{'': ['*']}

install_requires = \
['marshmallow-dataclass==8.5.14',
 'marshmallow==3.19.0',
 'pyhumps==3.8.0',
 'requests==2.30.0']

setup_kwargs = {
    'name': 'semantha-sdk',
    'version': '5.2.0',
    'description': 'This is a python client sdk for accessing semantha (the semantic platform)',
    'long_description': '![](https://www.semantha.de/wp-content/uploads/semantha-inverted.svg)\n\n# semanthaÂ® SDK\n\nThe semantha SDK is a high-level REST client to access the [semantha](http://semantha.ai) API.\nThe SDK is still under development.\nAn overview of the current progress (i.e. implemented and tested resources and endpoints) may be found at the end of\nthis document (State of Development).\nThe semantha SDK is compatible with python >= 3.8.\n\n## Design guideline/idea\nEvery api call can easily be translated into a python sdk call:\n`GET /api/info -> api.info.get()`\nThe SDK offers type hints and doc strings for services, parameters, input types and return types within your IDE.\n\n### Disclaimer\n\n**IMPORTANT:** The SDK is still under development and interfaces may change at any time without notice.\nUse with caution and on own risk.\n\n## Update Notes\n\n### Version 5.2.0\n\nThe SDK is now automatically generated from our openapi.json specification. It covers 71/169 (=42%) of all available services. Many class names and package names have been changed.\n\n### Version 4.5.0\nMajor restructuring of the SDK.\nAll sub-resources are directly accessible (instead of invoking getters).\nThat also means that (except for a few) all functions are plain get/post/delete/put/patch.\nFor example, in Versions < 4.5.0 a domain resource was fetched using `semantha_sdk.domains.get_one("domain_name")`.\nStarting with 4.5.0 it is `semantha_sdk.domains("domain_name")`.\nThat also means that get/post/put/patch functions return semantha model objects (and never resources), which makes usage more consistent.\n\n### Access\n\nTo access semantha\'s API you will need an API and a server url.\nBoth can be requested via [this contact form](https://www.semantha.de/request/).\n\n## Example Usage\n\n### Authentication with key\n\n```\nimport semantha_sdk\napi = semantha_sdk.login(server_url="<semantha platform server URL>", key="<your key>")\nprint("Talking to semantha server: " + api.info.get().version)\n```\n\n### Authentication with key file\n\n```\nimport semantha_sdk\napi = semantha_sdk.login(server_url="<semantha platform server URL>", key_file="<path to your key file (json format)>")\n# end-points (resp. resources) can be used like objects\nmy_domain = api.domains("my_domain")\n# they may have sub-resources, which can be retrieved as objects as well\nreference_documents = my_domain.referencedocuments\n# GET all reference documents\nprint("Library contains "+ len(reference_documents.get()) + " entries")\n```\n\n### CRUD on End-points\n\n```\n# CRUD operations are functions\ndomain_settings = my_domain.settings.get()\n#Warning: this deletes ALL reference documents/library entries\nmy_domain.referencedocuments.delete() \n```\n\n### Function Return Types & semantha Data Model\n\n```\n# some functions only return None, e.g.\nmy_domain.referencedocuments.delete() # returns NoneType\n\n# others return built in types, e.g\nroles_list = currentuser.roles.get() # returns List[str]\n\n# but most return objects of the semantha Data Model\n# (all returned objects are instances of frozen dataclasses)\nsettings = my_domain.settings.get() # returns instance of Settings\n# attributes can be accessed as properties, e.g.\nsettings.enable_tagging # returns true or false\n# Data Model objects may be complex\ndocument = my_domain.references.post(file=a, referencedocument=b) # returns instance of Document\n# the following returns the similarity value of the first references of the first sentence of the\n# the first paragraph on the first page of the document (if a reference was found for this sentence)\nsimilarity = pages[0].contents[0].paragraphs[0].references[0].similarity # returns float\n```\n\n## State of Development\n\nThe following resources and end-points are fully functional and (partially) tested:\n\n- [X] login -> API\n    - [X] .currentuser -> CurrentUser\n        - [X] get -> CurrentUser\n        - [X] roles -> RolesEndpoint\n          - [x] get -> List[str]\n    - [X] .diff -> Diff\n        - [X] post -> List[Difference]\n    - [X] .info -> InfoEndpoint\n        - [X] get -> Info\n    - [x] .languages -> List[str]\n    - [X] .domains -> Domains\n        - [X] get -> List[Domain]\n    - [X] .domains("domain_name") -> Domain\n        - [X] .documentannotations -> DocumentAnnotationsEndpoint\n            - [X] post -> IOBase\n        - [X] .documentclasses -> DocumentclassesEndpoint\n            - [X] get -> List[DocumentClass]\n            - [X] post -> DocumentClass\n            - [X] delete -> None\n        - [X] .documentclasses("id") -> DocumentclassEndpoint\n            - [X] get -> DocumentClass(\n            - [X] delete -> None\n            - [X] put -> DocumentClass\n            - [ ] documentclasses -> \n                - [ ] get -> List[DocumentClass]\n                - [ ] post -> DocumentClass\n            - [x] referencedocuments -> ReferencedocumentsEndpoint\n                - [x] get -> List[Document]\n                - [x] patch -> None\n                - [x] delete -> None\n        - [X] .documentcomparisons -> DocumentcomparisonsEndpoint\n            - [ ] post ->\n          - [X] .documents -> DocumentsEndpoint\n              - [X] post -> List[Document]\n        - [x] .modelinstances -> ModelInstance\n        - [x] .modelclasses -> ModelClass\n        - [X] .referencedocuments -> ReferenceDocuments\n            - [X] get -> ReferenceDocuments\n            - [X] delete -> None\n            - [X] post -> list[DocumentInformation]\n            - [x] .clusters -> DocumentCluster\n              - [x] get -> DocumentCluster\n            - [x] .statistic -> Statistics\n              - [x] get -> Statistic\n            - [x] .namedentities -> NamedEntities\n              - [x] get -> Optional[NamedEntities]\n        - [x] .referencedocuments("id") -> ReferenceDocument\n            - [X] get -> Document\n            - [X] delete -> None\n            - [X] patch -> DocumentInformation\n            - [X] .paragraphs("id") -> ReferenceDocumentParagraph\n                - [X] get -> Paragraph\n                - [X] patch -> Paragraph\n                - [X] delete -> None\n            - [X] .sentences("id") -> ReferenceDocumentSentence\n                - [x] get -> Sentence\n        - [X] .references -> References\n            - [X] post -> Document\n        - [x] .settings -> DomainSettings\n            - [X] get -> DomainSettings\n            - [X] patch -> DomainSettings\n        - [x] .similaritymatrix -> List[MatrixRow]\n            - [x] .clusters -> List[MatrixRow]\n        - [ ] .tags -> DomainTags\n            - [X] get -> list[str]\n            - .("tag").referencedocuments\n              - [x] get\n              - [x] delete\n        - [x] .validation -> SemanticModel\n    - [ ] .model\n      - [x] .domains("domain_name")\n        - [x] .boostwords -> Boostwords\n            - [x] get -> list[Boostword]\n            - [X] delete -> None\n            - [X] post_word -> Boostword\n            - [X] post_regex -> Boostword\n        - [x] .boostwords("id") -> Boostword\n            - [X] get -> Boostword\n            - [X] delete -> None\n            - [X] put_word -> Boostword\n            - [X] put_regex -> Boostword\n        - [x] .synonyms -> Synonyms\n            - [X] get -> list[Synonym]\n            - [X] delete -> None\n            - [X] post_word -> Synonym\n            - [X] post_regex -> Synonym\n        - [x] .synonyms("id") -> Synonym\n            - [X] get -> Synonym\n            - [X] delete -> None\n            - [X] put_word -> Synonym\n            - [X] put_regex -> Synonym\n        - [x] .datatypes -> list[str]',
    'author': 'Sebastian Weigelt',
    'author_email': 'sebastian.weigelt@semantha.ai',
    'maintainer': 'semantha support',
    'maintainer_email': 'support@semantha.de',
    'url': 'https://semantha.de',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.8,<4.0',
}


setup(**setup_kwargs)
