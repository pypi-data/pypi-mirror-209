Metadata-Version: 2.1
Name: llm-rs
Version: 0.2.1
Classifier: Programming Language :: Rust
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Requires-Dist: transformers >= 4.29.0; extra == 'convert'
Requires-Dist: sentencepiece >= 0.1.99; extra == 'convert'
Requires-Dist: torch >= 2.0.0; extra == 'convert'
Requires-Dist: accelerate >= 0.19.0; extra == 'convert'
Requires-Dist: tqdm; extra == 'convert'
Requires-Dist: huggingface-hub >= 0.14.1; extra == 'convert'
Provides-Extra: convert
License-File: LICENSE
Summary: Unofficial python bindings for llm-rs. üêç‚ù§Ô∏èü¶Ä
Keywords: LLM,Transformers
Author: Lukas Kreussel
Requires-Python: >=3.7
Description-Content-Type: text/markdown; charset=UTF-8; variant=GFM
Project-URL: documentation, https://llukas22.github.io/llm-rs-python/
Project-URL: repository, https://github.com/LLukas22/llm-rs-python

# llm-rs-python: Python Bindings for Rust's llm Library

Welcome to `llm-rs`, an unofficial Python interface for the Rust-based [llm](https://github.com/rustformers/llm) library, made possible through [PyO3](https://github.com/PyO3/pyo3). Our package combines the convenience of Python with the performance of Rust to offer an efficient tool for your machine learning projects. üêç‚ù§Ô∏èü¶Ä

With `llm-rs`, you can operate a variety of Large Language Models (LLMs) including LLama and GPT-NeoX directly on your CPU. 

For a detailed overview of all the supported architectures, visit the [llm](https://github.com/rustformers/llm) project page. 

## Installation

Simply install it via pip: `pip install llm-rs`

## Usage

The package is type-hinted for easy usage.

A Llama model can be run like this:

```python 
from llm_rs import Llama

#load the model
model = Llama("path/to/model.bin")

#generate
print(model.generate("The meaning of life is"))
```

## Documentation

For in-depth information on customizing the loading and generation processes, refer to our detailed [documentation](https://llukas22.github.io/llm-rs-python/).
