Metadata-Version: 2.1
Name: djangoviz
Version: 0.1.1
Summary: A visualization tool.
Author-email: Yoni Davidson <y@ariga.io>
Project-URL: Homepage, https://github.com/ariga/djangoviz
Keywords: django,erd,visualization
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Framework :: Django
Classifier: Framework :: Django :: 2.2
Classifier: Framework :: Django :: 3.2
Classifier: Framework :: Django :: 4.0
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
Classifier: License :: OSI Approved :: Apache Software License
Requires-Python: >=3.6.0
Description-Content-Type: text/markdown
License-File: LICENSE

# djangoviz

DjangoViz is a Django app that helps you visualize your models and their relationships using [Atlas Cloud](https://gh.atlasgo.cloud).

![alt text](https://entgo.io/images/assets/erd/edges-quick-summary.png)


## Installation

1. Install the `djangoviz` package:

```bash
pip install djangoviz
```

## Configuration

2. Add `djangoviz` to your Django project's `INSTALLED_APPS` in `settings.py`:

```python
INSTALLED_APPS = [
    ...,
    'djangoviz',
    ...
]
```

## Usage

3. Generate the visualization by running the `djangoviz` management command:

```bash
python manage.py djangoviz
```

```python
'Here is a public link to your schema visualization: https://gh.atlasgo.cloud/explore/13b2e709'
```

This command will create a visual representation of your projects database schema using Atlas Cloud. You can now easily view and explore the relationships between your models.

**Note**: Ensure that your Django project is properly configured and connected to a database before running the `djangoviz` command.
