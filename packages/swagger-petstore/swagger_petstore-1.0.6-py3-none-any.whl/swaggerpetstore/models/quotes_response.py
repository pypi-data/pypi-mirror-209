# -*- coding: utf-8 -*-

"""
swaggerpetstore

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerpetstore.models.fx_detail import FXDetail


class QuotesResponse(object):

    """Implementation of the 'QuotesResponse' model.

    This represents a response of an FX Quote request. This contains a
    fxTicketID, which is a UID generated by EarthPort. The fxTicketID has an
    exchange rate which is honoured for a  specified duration. This UID should
    be presented in Payout Request if required.

    Attributes:
        fx_ticket_id (int): fxTicketID is the unique number within the
            Earthport System representing the FX Quote presented to the
            Merchant. This is represented as an FX Ticket ID in Payment
            Request. Payout Request's specified with the optional FX Ticket Id
            will be validated against TTL. The Earthport system will throw a
            validation error if TTL is expired.
        fx_detail (FXDetail): Represents the details of an FX transaction,
            encapsulating the sellAmount, buyAmount and fxRate into a single
            type.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "fx_ticket_id": 'fxTicketID',
        "fx_detail": 'fxDetail'
    }

    def __init__(self,
                 fx_ticket_id=None,
                 fx_detail=None):
        """Constructor for the QuotesResponse class"""

        # Initialize members of the class
        self.fx_ticket_id = fx_ticket_id 
        self.fx_detail = fx_detail 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        fx_ticket_id = dictionary.get("fxTicketID") if dictionary.get("fxTicketID") else None
        fx_detail = FXDetail.from_dictionary(dictionary.get('fxDetail')) if dictionary.get('fxDetail') else None
        # Return an object of this model
        return cls(fx_ticket_id,
                   fx_detail)
