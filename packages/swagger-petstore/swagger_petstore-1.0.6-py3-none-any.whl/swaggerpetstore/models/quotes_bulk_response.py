# -*- coding: utf-8 -*-

"""
swaggerpetstore

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerpetstore.api_helper import APIHelper
from swaggerpetstore.models.bulk_fx_detail import BulkFXDetail


class QuotesBulkResponse(object):

    """Implementation of the 'QuotesBulkResponse' model.

    This response is used to represent cross rates between the required sell
    currencies and buy currencies. A ticket is created on EarthPort payment
    system for such quotes.

    Attributes:
        fx_ticket_id (int): FxTicketID is the unique number within the
            Earthport System representing the list of the FX Quotes presented
            to the Merchant. This is represented as an FX Ticket ID in Payment
            Request. Payout Request's specified with the optional FX Ticket Id
            will be validated against TTL (ExpiryTimestamp). The Earthport
            system will throw a validation error if TTL is expired.
        expiry_timestamp (string): A valid ISO 8601 timestamp, such as
            YYYY-MM-DDThh:mm:ss.sssÂ±hh:mm. ExpiryTimestamp represents the
            datetime value till what the specified FxTicketID is valid. This
            means that all rates in the ticket will be valid till this
            datetime.
        bulk_fx_detail (list of BulkFXDetail): Represents the list of fxRates
            and their details.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "fx_ticket_id": 'fxTicketID',
        "expiry_timestamp": 'expiryTimestamp',
        "bulk_fx_detail": 'bulkFXDetail'
    }

    _optionals = [
        'fx_ticket_id',
        'expiry_timestamp',
        'bulk_fx_detail',
    ]

    def __init__(self,
                 fx_ticket_id=APIHelper.SKIP,
                 expiry_timestamp=APIHelper.SKIP,
                 bulk_fx_detail=APIHelper.SKIP):
        """Constructor for the QuotesBulkResponse class"""

        # Initialize members of the class
        if fx_ticket_id is not APIHelper.SKIP:
            self.fx_ticket_id = fx_ticket_id 
        if expiry_timestamp is not APIHelper.SKIP:
            self.expiry_timestamp = expiry_timestamp 
        if bulk_fx_detail is not APIHelper.SKIP:
            self.bulk_fx_detail = bulk_fx_detail 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        fx_ticket_id = dictionary.get("fxTicketID") if dictionary.get("fxTicketID") else APIHelper.SKIP
        expiry_timestamp = dictionary.get("expiryTimestamp") if dictionary.get("expiryTimestamp") else APIHelper.SKIP
        bulk_fx_detail = None
        if dictionary.get('bulkFXDetail') is not None:
            bulk_fx_detail = [BulkFXDetail.from_dictionary(x) for x in dictionary.get('bulkFXDetail')]
        else:
            bulk_fx_detail = APIHelper.SKIP
        # Return an object of this model
        return cls(fx_ticket_id,
                   expiry_timestamp,
                   bulk_fx_detail)
