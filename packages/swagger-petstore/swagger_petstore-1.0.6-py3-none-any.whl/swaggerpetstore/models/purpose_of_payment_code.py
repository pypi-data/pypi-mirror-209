# -*- coding: utf-8 -*-

"""
swaggerpetstore

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerpetstore.models.purpose_of_payment_usage_restrictions import PurposeOfPaymentUsageRestrictions


class PurposeOfPaymentCode(object):

    """Implementation of the 'PurposeOfPaymentCode' model.

    This contains a specific Purpose of Payment option, consisting of a code
    and a human readable description.

    Attributes:
        code (string): Earthport purpose of payment code.
        description (string): Description of purpose of payment code.
        purpose_of_payment_usage_restrictions
            (PurposeOfPaymentUsageRestrictions): Usage restrictions apply
            where a specified code is only acceptable for a given type of
            payer or beneficiary. This attribute indicates whether the code
            can be used for Individuals and/or Legal Entities, for both payer
            and beneficiary parties. Additional field specifications identify
            further data that is required, given the chosen Purpose of
            Payment.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "code": 'code',
        "description": 'description',
        "purpose_of_payment_usage_restrictions": 'purposeOfPaymentUsageRestrictions'
    }

    def __init__(self,
                 code=None,
                 description=None,
                 purpose_of_payment_usage_restrictions=None):
        """Constructor for the PurposeOfPaymentCode class"""

        # Initialize members of the class
        self.code = code 
        self.description = description 
        self.purpose_of_payment_usage_restrictions = purpose_of_payment_usage_restrictions 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        code = dictionary.get("code") if dictionary.get("code") else None
        description = dictionary.get("description") if dictionary.get("description") else None
        purpose_of_payment_usage_restrictions = PurposeOfPaymentUsageRestrictions.from_dictionary(dictionary.get('purposeOfPaymentUsageRestrictions')) if dictionary.get('purposeOfPaymentUsageRestrictions') else None
        # Return an object of this model
        return cls(code,
                   description,
                   purpose_of_payment_usage_restrictions)
