# -*- coding: utf-8 -*-

"""
swaggerpetstore

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from swaggerpetstore.api_helper import APIHelper
import swaggerpetstore.exceptions.api_exception
from swaggerpetstore.models.failure import Failure


class ValidationException(swaggerpetstore.exceptions.api_exception.APIException):
    def __init__(self, reason, response):
        """Constructor for the ValidationException class

        Args:
            reason (string): The reason (or error message) for the Exception
                to be raised.
            response (HttpResponse): The HttpResponse of the API call.

        """
        super(ValidationException, self).__init__(reason, response)
        dictionary = APIHelper.json_deserialize(self.response.text)
        if isinstance(dictionary, dict):
            self.unbox(dictionary)

    def unbox(self, dictionary):
        """Populates the properties of this object by extracting them from a dictionary.

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        """
        self.time_of_failure = dictionary.get("timeOfFailure") if dictionary.get("timeOfFailure") else None
        self.failure_type = dictionary.get("failureType") if dictionary.get("failureType") else None
        self.short_msg = dictionary.get("shortMsg") if dictionary.get("shortMsg") else None
        self.long_msg = dictionary.get("longMsg") if dictionary.get("longMsg") else None
        self.code = dictionary.get("code") if dictionary.get("code") else None
        self.unique_error_id = dictionary.get("uniqueErrorID") if dictionary.get("uniqueErrorID") else None
        self.failures = None
        if dictionary.get('failures') is not None:
            self.failures = [Failure.from_dictionary(x) for x in dictionary.get('failures')]
