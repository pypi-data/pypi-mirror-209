# -*- coding: utf-8 -*-

"""
swaggerpetstore

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerpetstore.api_helper import APIHelper
from swaggerpetstore.models.additional_fields_list import AdditionalFieldsList
from swaggerpetstore.models.identity_restriction import IdentityRestriction


class PurposeOfPaymentUsageRestrictions(object):

    """Implementation of the 'PurposeOfPaymentUsageRestrictions' model.

    Usage restrictions apply where a specified code is only acceptable for a
    given type of payer or beneficiary. This attribute indicates whether the
    code can be used for Individuals and/or Legal Entities, for both payer and
    beneficiary parties. Additional field specifications identify further data
    that is required, given the chosen Purpose of Payment.

    Attributes:
        additional_fields_list (AdditionalFieldsList): This optionally
            contains a list of additional data that may be required if the
            associated purpose of payment is selected. This section will list
            a selection of 'additionalFieldWithValues' and/or
            'additionalFieldWithValidator':   'additionalFieldWithValues'
            indicates the additional key that can be provided in the
            payoutDetails section of a payout request along with an indication
            of whether this additional payout details entry is mandatory.
            'additionalFieldWithValues' will also be followed by a series of
            'fieldValues' that list the valid codes and descriptions that can
            be submitted as the value of the payoutDetail entry in the payout
            request. 'additionalFieldWithValidator' indicates an additional
            key that can be provided in the payoutDetails section of a payout
            request, along with an indication of whether this additional
            payout details is mandatory 'additionalFieldWithValidator' also
            includes the validation expression that will be applied to the
            value. This is a regular expression, and may be blank if no
            validation will be applied.
        beneficiary_type (IdentityRestriction): Indicates whether a purpose of
            payment code is valid if the beneficiary is an individual or legal
            entity.
        originator_type (IdentityRestriction): Indicates whether a purpose of
            payment code is valid if the beneficiary is an individual or legal
            entity.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "beneficiary_type": 'beneficiaryType',
        "originator_type": 'originatorType',
        "additional_fields_list": 'additionalFieldsList'
    }

    _optionals = [
        'additional_fields_list',
    ]

    def __init__(self,
                 beneficiary_type=None,
                 originator_type=None,
                 additional_fields_list=APIHelper.SKIP):
        """Constructor for the PurposeOfPaymentUsageRestrictions class"""

        # Initialize members of the class
        if additional_fields_list is not APIHelper.SKIP:
            self.additional_fields_list = additional_fields_list 
        self.beneficiary_type = beneficiary_type 
        self.originator_type = originator_type 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        beneficiary_type = IdentityRestriction.from_dictionary(dictionary.get('beneficiaryType')) if dictionary.get('beneficiaryType') else None
        originator_type = IdentityRestriction.from_dictionary(dictionary.get('originatorType')) if dictionary.get('originatorType') else None
        additional_fields_list = AdditionalFieldsList.from_dictionary(dictionary.get('additionalFieldsList')) if 'additionalFieldsList' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(beneficiary_type,
                   originator_type,
                   additional_fields_list)
