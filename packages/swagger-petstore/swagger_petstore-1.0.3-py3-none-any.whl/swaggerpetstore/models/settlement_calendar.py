# -*- coding: utf-8 -*-

"""
swaggerpetstore

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class SettlementCalendar(object):

    """Implementation of the 'SettlementCalendar' model.

    Represents the cut-off time for a specific settlement date.

    Attributes:
        submit_by (string): A valid ISO 8601 timestamp, such as
            YYYY-MM-DDThh:mm:ss.sssÂ±hh:mm. Represents settlement cut-off
            time.
        for_value_on (string): Valid ISO 8601 date format YYYY-MM-DD.
            Represents settlement date.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "submit_by": 'submitBy',
        "for_value_on": 'forValueOn'
    }

    def __init__(self,
                 submit_by=None,
                 for_value_on=None):
        """Constructor for the SettlementCalendar class"""

        # Initialize members of the class
        self.submit_by = submit_by 
        self.for_value_on = for_value_on 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        submit_by = dictionary.get("submitBy") if dictionary.get("submitBy") else None
        for_value_on = dictionary.get("forValueOn") if dictionary.get("forValueOn") else None
        # Return an object of this model
        return cls(submit_by,
                   for_value_on)
