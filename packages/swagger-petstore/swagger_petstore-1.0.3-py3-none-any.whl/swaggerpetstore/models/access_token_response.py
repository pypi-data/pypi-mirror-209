# -*- coding: utf-8 -*-

"""
swaggerpetstore

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerpetstore.api_helper import APIHelper


class AccessTokenResponse(object):

    """Implementation of the 'AccessTokenResponse' model.

    The OAuth 2.0 access token to be used in each subsequent API call.

    Attributes:
        token_type (string): Type of token.
        issued_at (string): Time the token was issued. This is milliseconds
            since epoch.
        access_token (string): The actual token which needs to be used to
            authorize each subsequent API request.
        expires_in (string): When this token expires in seconds.
        status (string): The status of the token.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "access_token": 'access_token',
        "token_type": 'token_type',
        "issued_at": 'issued_at',
        "expires_in": 'expires_in',
        "status": 'status'
    }

    _optionals = [
        'token_type',
        'issued_at',
        'expires_in',
        'status',
    ]

    def __init__(self,
                 access_token=None,
                 token_type=APIHelper.SKIP,
                 issued_at=APIHelper.SKIP,
                 expires_in=APIHelper.SKIP,
                 status=APIHelper.SKIP):
        """Constructor for the AccessTokenResponse class"""

        # Initialize members of the class
        if token_type is not APIHelper.SKIP:
            self.token_type = token_type 
        if issued_at is not APIHelper.SKIP:
            self.issued_at = issued_at 
        self.access_token = access_token 
        if expires_in is not APIHelper.SKIP:
            self.expires_in = expires_in 
        if status is not APIHelper.SKIP:
            self.status = status 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        access_token = dictionary.get("access_token") if dictionary.get("access_token") else None
        token_type = dictionary.get("token_type") if dictionary.get("token_type") else APIHelper.SKIP
        issued_at = dictionary.get("issued_at") if dictionary.get("issued_at") else APIHelper.SKIP
        expires_in = dictionary.get("expires_in") if dictionary.get("expires_in") else APIHelper.SKIP
        status = dictionary.get("status") if dictionary.get("status") else APIHelper.SKIP
        # Return an object of this model
        return cls(access_token,
                   token_type,
                   issued_at,
                   expires_in,
                   status)
