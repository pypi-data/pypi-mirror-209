# -*- coding: utf-8 -*-

"""
swaggerpetstore

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from swaggerpetstore.api_helper import APIHelper
from swaggerpetstore.configuration import Server
from swaggerpetstore.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from swaggerpetstore.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from apimatic_core.authentication.multiple.or_auth_group import Or
from swaggerpetstore.models.settlement_calendars_get_response import SettlementCalendarsGetResponse
from swaggerpetstore.exceptions.validation_exception import ValidationException
from swaggerpetstore.exceptions.api_exception import APIException


class SettlementCalendarsController(BaseController):

    """A Controller to access Endpoints in the swaggerpetstore API."""
    def __init__(self, config):
        super(SettlementCalendarsController, self).__init__(config)

    def get_settlement_calendar(self,
                                beneficiary_country,
                                service_level=None,
                                beneficiary_currency=None,
                                payout_request_currency=None,
                                number_of_calendar_days=7):
        """Does a GET request to /settlement-calendars.

        Retrieves the Settlement Calendar for payout.

        Args:
            beneficiary_country (string): Valid supported ISO 3166 2-character
                country code. Represents beneficiary country for the request
            service_level (string, optional): Service Level. Allowed values
                are standard and express.
            beneficiary_currency (string, optional): valid supported ISO 4217
                3-character currency code. Represents beneficiary currency for
                the request.
            payout_request_currency (string, optional): valid supported ISO
                4217 3-character currency code. Represents payout currency for
                the request.
            number_of_calendar_days (int, optional): Represents number of days
                to be returned in the response. Default is 7.

        Returns:
            SettlementCalendarsGetResponse: Response from the API. Settlement
                Calendar retrieved.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/settlement-calendars')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('beneficiaryCountry')
                         .value(beneficiary_country))
            .query_param(Parameter()
                         .key('serviceLevel')
                         .value(service_level))
            .query_param(Parameter()
                         .key('beneficiaryCurrency')
                         .value(beneficiary_currency))
            .query_param(Parameter()
                         .key('payoutRequestCurrency')
                         .value(payout_request_currency))
            .query_param(Parameter()
                         .key('numberOfCalendarDays')
                         .value(number_of_calendar_days))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SettlementCalendarsGetResponse.from_dictionary)
            .local_error('400', 'The requested operation could not be performed. Input Request is invalid or incorrect.', ValidationException)
            .local_error('401', 'Unauthorized - Invalid API Key and Token.', APIException)
            .local_error('403', 'Forbidden. Access to requested data is forbidden.', APIException)
            .local_error('404', 'Not Found. Requested resource does not exist.', APIException)
            .local_error('408', 'Timeout. Operation timed out.', APIException)
            .local_error('413', 'Request Entity Too Large. Earthport limits the request payload size to 100KB.', APIException)
            .local_error('415', 'Unsupported media type. This is probably due to submitting incorrect data format. e.g. XML instead of JSON.', APIException)
            .local_error('429', 'Too many requests hit the API too quickly. We recommend an exponential backoff of your requests.', APIException)
            .local_error('500', 'An internal error has occurred in the Earthport payment platform.', APIException)
        ).execute()
