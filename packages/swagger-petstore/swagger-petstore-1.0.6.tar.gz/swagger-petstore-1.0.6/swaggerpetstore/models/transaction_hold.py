# -*- coding: utf-8 -*-

"""
swaggerpetstore

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerpetstore.api_helper import APIHelper


class TransactionHold(object):

    """Implementation of the 'TransactionHold' model.

    Parameter to prevent transactions from being processed until the desired
    time has been reached. Note releaseDateTime must be in UTC format.

    Attributes:
        offset_minutes (int): This is the time in minutes to hold the
            transaction until.
        release_date_time (string): This is used when you want to provide a
            specific timestamp to hold the transaction until. A valid ISO 8601
            timestamp, such as YYYY-MM-DDThh:mm:ss.sssÂ±hh:mm.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "offset_minutes": 'offsetMinutes',
        "release_date_time": 'releaseDateTime'
    }

    _optionals = [
        'offset_minutes',
        'release_date_time',
    ]

    def __init__(self,
                 offset_minutes=APIHelper.SKIP,
                 release_date_time=APIHelper.SKIP):
        """Constructor for the TransactionHold class"""

        # Initialize members of the class
        if offset_minutes is not APIHelper.SKIP:
            self.offset_minutes = offset_minutes 
        if release_date_time is not APIHelper.SKIP:
            self.release_date_time = release_date_time 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        offset_minutes = dictionary.get("offsetMinutes") if dictionary.get("offsetMinutes") else APIHelper.SKIP
        release_date_time = dictionary.get("releaseDateTime") if dictionary.get("releaseDateTime") else APIHelper.SKIP
        # Return an object of this model
        return cls(offset_minutes,
                   release_date_time)
