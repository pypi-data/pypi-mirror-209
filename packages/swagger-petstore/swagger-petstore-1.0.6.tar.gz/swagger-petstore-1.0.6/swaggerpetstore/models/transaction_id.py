# -*- coding: utf-8 -*-

"""
swaggerpetstore

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerpetstore.api_helper import APIHelper


class TransactionID(object):

    """Implementation of the 'TransactionID' model.

    Transaction ID type which contains both the unique Earthport transaction
    ID and the merchant supplied transaction ID.

    Attributes:
        ep_transaction_id (long|int): The payment ID generated by EPS.
        merchant_transaction_id (string): The unique reference of a
            transaction provided by the merchant. This is unique per
            Contracting Merchant.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "ep_transaction_id": 'epTransactionID',
        "merchant_transaction_id": 'merchantTransactionID'
    }

    _optionals = [
        'ep_transaction_id',
        'merchant_transaction_id',
    ]

    def __init__(self,
                 ep_transaction_id=APIHelper.SKIP,
                 merchant_transaction_id=APIHelper.SKIP):
        """Constructor for the TransactionID class"""

        # Initialize members of the class
        if ep_transaction_id is not APIHelper.SKIP:
            self.ep_transaction_id = ep_transaction_id 
        if merchant_transaction_id is not APIHelper.SKIP:
            self.merchant_transaction_id = merchant_transaction_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        ep_transaction_id = dictionary.get("epTransactionID") if dictionary.get("epTransactionID") else APIHelper.SKIP
        merchant_transaction_id = dictionary.get("merchantTransactionID") if dictionary.get("merchantTransactionID") else APIHelper.SKIP
        # Return an object of this model
        return cls(ep_transaction_id,
                   merchant_transaction_id)
