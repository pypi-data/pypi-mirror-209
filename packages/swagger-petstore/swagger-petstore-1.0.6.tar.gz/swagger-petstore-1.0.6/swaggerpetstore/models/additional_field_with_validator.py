# -*- coding: utf-8 -*-

"""
swaggerpetstore

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class AdditionalFieldWithValidator(object):

    """Implementation of the 'AdditionalFieldWithValidator' model.

    Indicates an additional key that can be provided in the payoutDetails
    section of a payout request, along with an indication of whether this
    additional payout details is mandatory. Also includes the validation
    expression that will be applied to the value. This is a regular
    expression, and may be blank if no validation will be applied.

    Attributes:
        key (string): Key for list option.
        label (string): Label for list option.
        mandatory (bool): Indicates whether this additional payout details is
            mandatory.
        validation (string): The validation expression that will be applied to
            the value. This is a regular expression, and may be blank if no
            validation will be applied.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "key": 'key',
        "label": 'label',
        "mandatory": 'mandatory',
        "validation": 'validation'
    }

    def __init__(self,
                 key=None,
                 label=None,
                 mandatory=None,
                 validation=None):
        """Constructor for the AdditionalFieldWithValidator class"""

        # Initialize members of the class
        self.key = key 
        self.label = label 
        self.mandatory = mandatory 
        self.validation = validation 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        key = dictionary.get("key") if dictionary.get("key") else None
        label = dictionary.get("label") if dictionary.get("label") else None
        mandatory = dictionary.get("mandatory") if "mandatory" in dictionary.keys() else None
        validation = dictionary.get("validation") if dictionary.get("validation") else None
        # Return an object of this model
        return cls(key,
                   label,
                   mandatory,
                   validation)
