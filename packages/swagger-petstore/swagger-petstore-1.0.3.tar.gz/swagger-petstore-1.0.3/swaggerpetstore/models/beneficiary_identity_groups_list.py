# -*- coding: utf-8 -*-

"""
swaggerpetstore

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerpetstore.api_helper import APIHelper
from swaggerpetstore.models.beneficiary_identity_field_group_choice import *
from swaggerpetstore.models.beneficiary_identity_group import BeneficiaryIdentityGroup


class BeneficiaryIdentityGroupsList(object):

    """Implementation of the 'BeneficiaryIdentityGroupsList' model.

    This type defines a list of identity data groups. Each group is normally
    represented as a section of fields on the UI.

    Attributes:
        group_label (string): Label for the beneficiary identity fields.
        beneficiary_identity_field_group (list of BeneficiaryIdentityGroup):
            List of field groupings to define the beneficiary identity.
        beneficiary_identity_field_group_choice (list of
            BeneficiaryIdentityFieldGroupChoice): Conditional sets of field
            groupings to define the beneficiary identity. i.e. this could
            present a list of beneficiary identity fields for an individual
            and also the list of beneficiary identity fields for a legal
            entity.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "group_label": 'groupLabel',
        "beneficiary_identity_field_group": 'beneficiaryIdentityFieldGroup',
        "beneficiary_identity_field_group_choice": 'beneficiaryIdentityFieldGroupChoice'
    }

    _optionals = [
        'beneficiary_identity_field_group',
        'beneficiary_identity_field_group_choice',
    ]

    def __init__(self,
                 group_label=None,
                 beneficiary_identity_field_group=APIHelper.SKIP,
                 beneficiary_identity_field_group_choice=APIHelper.SKIP):
        """Constructor for the BeneficiaryIdentityGroupsList class"""

        # Initialize members of the class
        self.group_label = group_label 
        if beneficiary_identity_field_group is not APIHelper.SKIP:
            self.beneficiary_identity_field_group = beneficiary_identity_field_group 
        if beneficiary_identity_field_group_choice is not APIHelper.SKIP:
            self.beneficiary_identity_field_group_choice = beneficiary_identity_field_group_choice 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        group_label = dictionary.get("groupLabel") if dictionary.get("groupLabel") else None
        beneficiary_identity_field_group = None
        if dictionary.get('beneficiaryIdentityFieldGroup') is not None:
            beneficiary_identity_field_group = [BeneficiaryIdentityGroup.from_dictionary(x) for x in dictionary.get('beneficiaryIdentityFieldGroup')]
        else:
            beneficiary_identity_field_group = APIHelper.SKIP
        beneficiary_identity_field_group_choice = None
        if dictionary.get('beneficiaryIdentityFieldGroupChoice') is not None:
            beneficiary_identity_field_group_choice = [BeneficiaryIdentityFieldGroupChoice.from_dictionary(x) for x in dictionary.get('beneficiaryIdentityFieldGroupChoice')]
        else:
            beneficiary_identity_field_group_choice = APIHelper.SKIP
        # Return an object of this model
        return cls(group_label,
                   beneficiary_identity_field_group,
                   beneficiary_identity_field_group_choice)
