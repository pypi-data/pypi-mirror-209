# -*- coding: utf-8 -*-

"""
swaggerpetstore

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerpetstore.api_helper import APIHelper
from swaggerpetstore.models.identity import Identity
from swaggerpetstore.models.user_id import UserID


class UsersGetResponse(object):

    """Implementation of the 'UsersGetResponse' model.

    This response contains the PayerIdentity data including address, birth
    data, identification and additional elements as appropriate depending on
    if it is a company or an individuals identity.

    Attributes:
        user_id (UserID): This group consists of all possible user identifier
            types. The 'epUserID' field is the Earthport generated unique
            identifier for a User and is the equivalent of a Virtual Account
            Number (VAN). The 'merchantUserID' is a merchant specified
            identifier for the User. The 'epUserID', 'merchantUserID' or both
            'epUserID' and 'merchantUserID' can be supplied. A mapping will be
            performed to retrieve the merchant user ID from the supplied EP
            user ID and vice versa. If both the 'epUserID' and
            'merchantUserID' are supplied, a check will be performed to ensure
            that the two are mapped. If the two provided fields are not
            mapped, then a validation error code will be returned. At least
            one of the fields must be populated.
        payer_identity (Identity): Represents the identity of an individual or
            legal entity. You must specify one of either an individual
            identity or legal entity identity or unstructured identity.
        created_date (datetime): The Date the User was created.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "user_id": 'userID',
        "payer_identity": 'payerIdentity',
        "created_date": 'createdDate'
    }

    def __init__(self,
                 user_id=None,
                 payer_identity=None,
                 created_date=None):
        """Constructor for the UsersGetResponse class"""

        # Initialize members of the class
        self.user_id = user_id 
        self.payer_identity = payer_identity 
        self.created_date = APIHelper.RFC3339DateTime(created_date) if created_date else None 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        user_id = UserID.from_dictionary(dictionary.get('userID')) if dictionary.get('userID') else None
        payer_identity = Identity.from_dictionary(dictionary.get('payerIdentity')) if dictionary.get('payerIdentity') else None
        created_date = APIHelper.RFC3339DateTime.from_value(dictionary.get("createdDate")).datetime if dictionary.get("createdDate") else None
        # Return an object of this model
        return cls(user_id,
                   payer_identity,
                   created_date)
