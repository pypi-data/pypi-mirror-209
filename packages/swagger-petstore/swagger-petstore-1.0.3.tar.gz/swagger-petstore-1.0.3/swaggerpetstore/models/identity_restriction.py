# -*- coding: utf-8 -*-

"""
swaggerpetstore

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class IdentityRestriction(object):

    """Implementation of the 'IdentityRestriction' model.

    Indicates whether a purpose of payment code is valid if the beneficiary is
    an individual or legal entity.

    Attributes:
        individual (bool): Is the purpose of payment code valid if the
            beneficiary is an individual.
        legal_entity (bool): Is the purpose of payment code is valid if the
            beneficiary is a legal entity.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "individual": 'individual',
        "legal_entity": 'legalEntity'
    }

    def __init__(self,
                 individual=None,
                 legal_entity=None):
        """Constructor for the IdentityRestriction class"""

        # Initialize members of the class
        self.individual = individual 
        self.legal_entity = legal_entity 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        individual = dictionary.get("individual") if "individual" in dictionary.keys() else None
        legal_entity = dictionary.get("legalEntity") if "legalEntity" in dictionary.keys() else None
        # Return an object of this model
        return cls(individual,
                   legal_entity)
