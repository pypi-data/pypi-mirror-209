# -*- coding: utf-8 -*-

"""
swaggerpetstore

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerpetstore.api_helper import APIHelper


class BulkFXDetail(object):

    """Implementation of the 'BulkFXDetail' model.

    represents the list of fxRates and their details.

    Attributes:
        sell_currency (string): Valid supported ISO 4217 3-character currency
            code. Represents Sell Currency for which FxRate was found.
        buy_currency (string): Valid supported ISO 4217 3-character currency
            code. Represents Buy Currency for which FxRate was found.
        buy_country (string): Valid supported ISO 3166 2-character country
            code. Buy Country is the country of the Beneficiary Bank where the
            merchant wishes to buy or convert the sell currency.
        service_level (ServiceLevelEnum): Supported service levels for a
            payout request (standard or express).
        buy_fx_rate (float): Represents the FX rate between two currencies
            that will be applied during a buy direction trade – buying x
            amount of beneficiary currency (buyCurrency). The rate is
            restricted to 6 decimal places.
        sell_fx_rate (float): Represents the FX rate between two currencies
            that will be effective during a sell direction trade – selling x
            amount of payout instruction currency (sellCurrency). The rate is
            restricted to 6 decimal places.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "sell_currency": 'sellCurrency',
        "buy_currency": 'buyCurrency',
        "buy_country": 'buyCountry',
        "service_level": 'serviceLevel',
        "buy_fx_rate": 'buyFxRate',
        "sell_fx_rate": 'sellFxRate'
    }

    _optionals = [
        'buy_currency',
        'buy_country',
        'service_level',
        'buy_fx_rate',
        'sell_fx_rate',
    ]

    def __init__(self,
                 sell_currency=None,
                 buy_currency=APIHelper.SKIP,
                 buy_country=APIHelper.SKIP,
                 service_level=APIHelper.SKIP,
                 buy_fx_rate=APIHelper.SKIP,
                 sell_fx_rate=APIHelper.SKIP):
        """Constructor for the BulkFXDetail class"""

        # Initialize members of the class
        self.sell_currency = sell_currency 
        if buy_currency is not APIHelper.SKIP:
            self.buy_currency = buy_currency 
        if buy_country is not APIHelper.SKIP:
            self.buy_country = buy_country 
        if service_level is not APIHelper.SKIP:
            self.service_level = service_level 
        if buy_fx_rate is not APIHelper.SKIP:
            self.buy_fx_rate = buy_fx_rate 
        if sell_fx_rate is not APIHelper.SKIP:
            self.sell_fx_rate = sell_fx_rate 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        sell_currency = dictionary.get("sellCurrency") if dictionary.get("sellCurrency") else None
        buy_currency = dictionary.get("buyCurrency") if dictionary.get("buyCurrency") else APIHelper.SKIP
        buy_country = dictionary.get("buyCountry") if dictionary.get("buyCountry") else APIHelper.SKIP
        service_level = dictionary.get("serviceLevel") if dictionary.get("serviceLevel") else APIHelper.SKIP
        buy_fx_rate = dictionary.get("buyFxRate") if dictionary.get("buyFxRate") else APIHelper.SKIP
        sell_fx_rate = dictionary.get("sellFxRate") if dictionary.get("sellFxRate") else APIHelper.SKIP
        # Return an object of this model
        return cls(sell_currency,
                   buy_currency,
                   buy_country,
                   service_level,
                   buy_fx_rate,
                   sell_fx_rate)
