[build-system]
requires = [
    "hatchling>=1.5.0",
]
build-backend = "hatchling.build"

[project]
name = "typed-settings"
version = "23.0.1"
description = "Typed settings based on attrs classes"
readme = "README.md"
license = "MIT"
requires-python = ">=3.7"
authors = [
    { name = "Stefan Scherfke", email = "stefan@sofa-rockers.org" },
]
keywords = [
    "configuration",
    "options",
    "settings",
    "types",
    "validation",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "attrs>=23.1",
    "cattrs>=22.2",
    "tomli>=2; python_version<'3.11'",
]

[project.optional-dependencies]
click = [
    "click>=7,<9",
]
option-groups = [
    "click-option-group",
    "click>=7,<9",
]
jinja = [
    "jinja2",
]
all = [  # All features
    "typed-settings[click,option-groups,jinja]",
]
docs = [
    "typed-settings[all]",
    "furo",
    "sphinx",
    "sphinx-copybutton",
]
lint = [
    "typed-settings[all]",
    "black",
    "ruff",
    "mypy",
    "types-toml",
]
test = [
    "typed-settings[all]",
    "coverage[toml]>=5.3",
    "pytest-cov",
    "pytest>=7.2.0",
    "rich-click>=1.6",
    "sybil",
    "typing-extensions",
]
dev = [  # Everything needed for development
    "typed-settings[docs,lint,test]",
    "nox",
    "safety",
]

[project.urls]
Homepage = "https://gitlab.com/sscherfke/typed-settings"
Documentation = "https://typed-settings.readthedocs.io"
Changelog = "https://typed-settings.readthedocs.io/en/latest/changelog.html"
"Bug Tracker" = "https://gitlab.com/sscherfke/typed-settings/-/issues"
"Source Code" = "https://gitlab.com/sscherfke/typed-settings"

[tool.hatch.build.targets.sdist]
include = [
    "/docs",
    "/src",
    "/tests",
]

[tool.hatch.build.targets.wheel]

[tool.hatch.envs.default]
features = ["dev"]
post-install-commands = [
    "pre-commit install --install-hooks",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:docs src tests}"
cov = "pytest --cov --cov-config=pyproject.toml --cov-report=term-missing {args:docs src tests}"
lint = [
  "ruff .",
  "mypy src/ tests/ ./noxfile.py",
  "mypy docs/conf.py docs/conftest.py",
  "mypy docs/examples",
]
fix = [
  "ruff --fix-only {args:.}",
  "black {args:.}",
]
docs = [
  "make -C docs html",
]
clean-docs = [
  "make -C docs clean html",
]

[tool.black]
line-length = 79

[tool.coverage.paths]
source = [
    "src",
    ".nox/test-*/**/site-packages",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "\\.\\.\\.",
    "if TYPE_CHECKING",
]
fail_under = 100
omit = [  # This is also (dynamically) set/overridden in noxfile.py!
    "src/typed_settings/_onepassword.py",
    "tests/test_onepassword.py",
]
show_missing = true

[tool.coverage.run]
branch = true
parallel = true
source_pkgs = [
    "typed_settings",
    "tests",
]

[tool.mypy]
ignore_missing_imports = true
plugins = ["typed_settings.mypy"]
show_error_codes = true

[[tool.mypy.overrides]]
module = "typed_settings.*"
disallow_untyped_defs = true

[tool.pytest.ini_options]
addopts = "--doctest-glob='*.md' --doctest-glob='*.rst' --doctest-modules --ignore=docs/_build"
# addopts = "-p no:doctest"

[tool.ruff]
select = ["F", "E", "W", "C90", "I", "S", "B", "UP"]
ignore = [
    "S101",  # assert needed in tests, useful in src for documenting invariants
]
line-length = 79
src = ["src", "tests"]
target-version = "py37"

[tool.ruff.isort]
lines-after-imports = 2

[tool.ruff.pydocstyle]
convention = "google"
