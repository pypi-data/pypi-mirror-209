# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/adv-ml',
                'doc_host': 'https://Irad-Zehavi.github.io',
                'git_url': 'https://github.com/Irad-Zehavi/adv-ml',
                'lib_path': 'adv_ml'},
  'syms': { 'adv_ml.all': {},
            'adv_ml.evasion': { 'adv_ml.evasion.L2PGD': ('evasion.html#l2pgd', 'adv_ml/evasion.py'),
                                'adv_ml.evasion.L2PGD.normalize': ('evasion.html#l2pgd.normalize', 'adv_ml/evasion.py'),
                                'adv_ml.evasion.L2PGD.project': ('evasion.html#l2pgd.project', 'adv_ml/evasion.py'),
                                'adv_ml.evasion.L2PGD.rand_init': ('evasion.html#l2pgd.rand_init', 'adv_ml/evasion.py'),
                                'adv_ml.evasion.LinfPGD': ('evasion.html#linfpgd', 'adv_ml/evasion.py'),
                                'adv_ml.evasion.LinfPGD.normalize': ('evasion.html#linfpgd.normalize', 'adv_ml/evasion.py'),
                                'adv_ml.evasion.LinfPGD.project': ('evasion.html#linfpgd.project', 'adv_ml/evasion.py'),
                                'adv_ml.evasion.LinfPGD.rand_init': ('evasion.html#linfpgd.rand_init', 'adv_ml/evasion.py'),
                                'adv_ml.evasion.PGDCallback': ('evasion.html#pgdcallback', 'adv_ml/evasion.py'),
                                'adv_ml.evasion.PGDCallback.__init__': ('evasion.html#pgdcallback.__init__', 'adv_ml/evasion.py'),
                                'adv_ml.evasion.PGDCallback.after_batch': ('evasion.html#pgdcallback.after_batch', 'adv_ml/evasion.py'),
                                'adv_ml.evasion.PGDCallback.before_step': ('evasion.html#pgdcallback.before_step', 'adv_ml/evasion.py'),
                                'adv_ml.evasion.PGDCallback.clamp_pixel_values': ( 'evasion.html#pgdcallback.clamp_pixel_values',
                                                                                   'adv_ml/evasion.py'),
                                'adv_ml.evasion.PGDCallback.init_pert': ('evasion.html#pgdcallback.init_pert', 'adv_ml/evasion.py'),
                                'adv_ml.evasion.PGDCallback.normalize': ('evasion.html#pgdcallback.normalize', 'adv_ml/evasion.py'),
                                'adv_ml.evasion.PGDCallback.project': ('evasion.html#pgdcallback.project', 'adv_ml/evasion.py'),
                                'adv_ml.evasion.PGDCallback.rand_init': ('evasion.html#pgdcallback.rand_init', 'adv_ml/evasion.py'),
                                'adv_ml.evasion.PGDCallback.suggest_lr': ('evasion.html#pgdcallback.suggest_lr', 'adv_ml/evasion.py'),
                                'adv_ml.evasion._batch_norm': ('evasion.html#_batch_norm', 'adv_ml/evasion.py'),
                                'adv_ml.evasion._batch_normalize': ('evasion.html#_batch_normalize', 'adv_ml/evasion.py'),
                                'adv_ml.evasion._random_unit_vector': ('evasion.html#_random_unit_vector', 'adv_ml/evasion.py')},
            'adv_ml.input_optimization': { 'adv_ml.input_optimization.InputOptimizer': ( 'input_optimization.html#inputoptimizer',
                                                                                         'adv_ml/input_optimization.py'),
                                           'adv_ml.input_optimization.InputOptimizer.__init__': ( 'input_optimization.html#inputoptimizer.__init__',
                                                                                                  'adv_ml/input_optimization.py'),
                                           'adv_ml.input_optimization.InputOptimizer._perturb': ( 'input_optimization.html#inputoptimizer._perturb',
                                                                                                  'adv_ml/input_optimization.py'),
                                           'adv_ml.input_optimization.InputOptimizer.perturb': ( 'input_optimization.html#inputoptimizer.perturb',
                                                                                                 'adv_ml/input_optimization.py'),
                                           'adv_ml.input_optimization.PerturbationCallback': ( 'input_optimization.html#perturbationcallback',
                                                                                               'adv_ml/input_optimization.py'),
                                           'adv_ml.input_optimization.PerturbationCallback.init_pert': ( 'input_optimization.html#perturbationcallback.init_pert',
                                                                                                         'adv_ml/input_optimization.py'),
                                           'adv_ml.input_optimization.PerturbationCallback.suggest_lr': ( 'input_optimization.html#perturbationcallback.suggest_lr',
                                                                                                          'adv_ml/input_optimization.py'),
                                           'adv_ml.input_optimization._Perturbation': ( 'input_optimization.html#_perturbation',
                                                                                        'adv_ml/input_optimization.py'),
                                           'adv_ml.input_optimization._Perturbation.__init__': ( 'input_optimization.html#_perturbation.__init__',
                                                                                                 'adv_ml/input_optimization.py'),
                                           'adv_ml.input_optimization._Perturbation.forward': ( 'input_optimization.html#_perturbation.forward',
                                                                                                'adv_ml/input_optimization.py'),
                                           'adv_ml.input_optimization._TrainLoop': ( 'input_optimization.html#_trainloop',
                                                                                     'adv_ml/input_optimization.py'),
                                           'adv_ml.input_optimization._TrainLoop.before_train': ( 'input_optimization.html#_trainloop.before_train',
                                                                                                  'adv_ml/input_optimization.py'),
                                           'adv_ml.input_optimization._TrainLoop.before_validate': ( 'input_optimization.html#_trainloop.before_validate',
                                                                                                     'adv_ml/input_optimization.py')}}}
