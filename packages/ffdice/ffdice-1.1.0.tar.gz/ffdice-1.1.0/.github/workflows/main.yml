name: Create GitHub release and distribute package to TestPyPi

# Restrict Action to main branch.
on:
  push:
    branches:
      - main

# Initialize variable for package version.
# This suppresses the 'Context access might be invalid' warning.
env:
  VERSION: ''

# Grant write permissions for tags and releases. 
permissions:
  contents: write
  pull-requests: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      # Prepare new version.
      - name: Define new semantic version
        id: update_version
        uses: PaulHatch/semantic-version@v5.0.3
        with:
          tag_prefix: ""
          major_pattern: "BREAKING: "
          minor_pattern: "feat: "
      - name: Output new version
        run: |
          echo "VERSION=${{steps.update_version.outputs.version}}" >> "$GITHUB_ENV"
      - name: Create changelog
        id: create_changelog
        uses: ardalanamini/auto-changelog@v4.0.0
        with:
          release-name: ${{env.VERSION}}
          include-compare-link: false
      - name: Bump Python package version
        uses: DamianReeves/write-file-action@v1.2
        with:
          path: ffdice/__about__.py
          contents: |
            __version__ = "${{env.VERSION}}"
          write-mode: overwrite
      - name: Git Auto Commit
        uses: stefanzweifel/git-auto-commit-action@v4.16.0
        with:
          commit_message: "ci: Version bump [ignore]"
          file_pattern: ffdice/*.py
      # Create a new tag and release.
      - name: Create tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{env.VERSION}}
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{env.VERSION}}
          body: ${{steps.create_changelog.outputs.changelog}}
      # Build Python package and distribute it to PyPI.
      - name: Install pypa/build
        run: >-
          python -m pip install build --user
      - name: Build Python package
        run: >-
          python -m build --sdist --wheel --outdir dist/ .
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # Configure an Action secret in GitHub.
          password: ${{secrets.PYPI_API_TOKEN}}
