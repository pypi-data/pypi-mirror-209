
exp_dir: exps/
mixed_precision: 'fp16'
allow_tf32: False
seed: 114514
ckpt_type: 'safetensors' # [torch, safetensors]

vis_info:
  prompt: null
  negative_prompt: ''

train:
  train_steps: 1000
  gradient_accumulation_steps: 1
  workers: 4
  max_grad_norm: 1.0
  set_grads_to_none: False
  save_step: 100
  cfg_scale: '1.0' # for DreamArtist

  resume: null
#  resume:
#    ckpt_path:
#      unet: []
#      TE: []
#      words: {}
#    start_step: 0

  loss:
    criterion:
      _target_: hcpdiff.loss.MSELoss
      _partial_: True
      reduction: 'none' # support for attention mask
    type: 'eps' # 'eps' or 'sample'

  optimizer:
    type: adamw
    weight_decay: 1e-3

  optimizer_pt:
    type: adamw
    weight_decay: 5e-4

  scale_lr: True # auto scale lr with total batch size
  scheduler:
    name: 'one_cycle'
    num_warmup_steps: 200
    num_training_steps: 1000
    scheduler_kwargs: {} # args for scheduler

  scale_lr_pt: True
  scheduler_pt: ${.scheduler}

logger:
  -
    _target_: hcpdiff.loggers.CLILogger
    _partial_: True
    out_path: 'train.log'
    log_step: 20

model:
  revision: null
  pretrained_model_name_or_path: null
  tokenizer_name: null
  tokenizer_repeats: 2
  enable_xformers: True
  gradient_checkpointing: True
  ema_unet: 0 # 0 to disable
  ema_text_encoder: 0 # 0 to disable
  clip_skip: 0
  noise_scheduler:
    _target_: diffusers.DDPMScheduler.from_pretrained
    _partial_: True

data:
  dataset1:
    _target_: hcpdiff.data.TextImagePairDataset
    _partial_: True # Not directly instantiate the object here. There are other parameters to be added in the runtime.
    batch_size: 4
    cache_latents: True
    att_mask_encode: False
    loss_weight: 1.0

    image_transforms:
      _target_: torchvision.transforms.Compose # "_target_" for hydra.utils.instantiate
      transforms:
        - _target_: torchvision.transforms.ToTensor
        - _target_: torchvision.transforms.Normalize
          _args_: [ [ 0.5 ], [ 0.5 ] ]

    source:
      data_source1:
        img_root: 'imgs/train' # images directory of train images
        prompt_template: 'prompt_tuning_template/object.txt'
        caption_file: null # path to image captions (file_words)
        att_mask: null
        bg_color: [255, 255, 255] # RGB; for ARGB -> RGB
        image_transforms: ${...image_transforms}
        tag_transforms:
          _target_: torchvision.transforms.Compose
          transforms:
            - _target_: hcpdiff.utils.caption_tools.TagShuffle
            - _target_: hcpdiff.utils.caption_tools.TagDropout
              p: 0.1
            - _target_: hcpdiff.utils.caption_tools.TemplateFill
              word_names: {} # Replace placeholders with specific words or embeddings
    bucket:
      _target_: hcpdiff.data.bucket.RatioBucket.from_files # aspect ratio bucket
      target_area: {_target_: "builtins.eval", _args_: ['512*512']} # Expected area of training images: width * height
      num_bucket: 5