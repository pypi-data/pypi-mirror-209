Metadata-Version: 2.1
Name: callingcardstools
Version: 0.1.6
Summary: A collection of objects and functions to work with calling cards sequencing tools
Home-page: https://cmatkhan.github.io/callingCardsTools/
License: MIT
Author: chase mateusiak
Author-email: chase.mateusiak@gmail.com
Requires-Python: >=3.8,<3.11
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Dist: Cython (>=0.29.30,<0.30.0)
Requires-Dist: biopython (>=1.79,<2.0)
Requires-Dist: edlib (>=1.3.9,<2.0.0)
Requires-Dist: numpy (>=1.23.1,<2.0.0)
Requires-Dist: pandas (>=1.4.3,<2.0.0)
Requires-Dist: pysam (>=0.19.1,<0.20.0)
Requires-Dist: scipy (>=1.8.1,<2.0.0)
Project-URL: Documentation, https://cmatkhan.github.io/callingCardsTools/
Project-URL: Repository, https://github.com/cmatKhan/callingCardsTools
Description-Content-Type: text/markdown

# Installation 

```
pip install callingcardstools
```

To start using the command line tools, see the help message with:

```
callingcardstools --help
```

# Development Installation

1. install [poetry](https://python-poetry.org/)
  - I prefer to set the default location of the virtual environment to the 
  project directory. You can set that as a global configuration for your 
  poetry installation like so: `poetry config virtualenvs.in-project true`

2. git clone the repo

3. cd into the repo and issue the command `poetry install`

4. shell into the virtual environment with `poetry shell`

5. build the package with `poetry build`

6. install the callingcardstools packge into your virtual environment 
  `pip install dist/callingcardstools-...`
  - Note: you could figure out how to use the pip install `-e` flag to 
  have an interactive development environment. I don't think that is compatible 
  with only the `pyproject.toml` file, but if you look it up, you'll find good 
  stackoverflow instructions on how to put a dummy `setup.py` file in to make 
  this possible

7. Building the Dockerimage:

Currently the Dockerimage is built from a stable version on github

Note that unless I set it up, you won't be able to push to my dockerhub repo. 
I think that is possible to do, though. If you wish to push to your own dockerhub, 
replace the cmatkhan to your username.

```bash
docker build -t cmatkhan/callingcardstools - < Dockerfile
```

where cmatkhan/callingcardstools is the tag. This will default to the version 
`latest`

To push:

```bash
docker push cmatkhan/callingcardstools
```
