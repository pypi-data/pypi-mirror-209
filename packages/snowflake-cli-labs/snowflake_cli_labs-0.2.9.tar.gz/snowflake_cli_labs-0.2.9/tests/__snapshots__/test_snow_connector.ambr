# serializer version: 1
# name: test_createFunction
  '''
  use database databaseValue;
  use schema schemaValue;
  use warehouse warehouseValue;
  CREATE OR REPLACE  FUNCTION nameValue(string a, variant b)
           RETURNS returnTypeValue
           LANGUAGE PYTHON
           RUNTIME_VERSION=3.8
           IMPORTS=('import1, import2')
           HANDLER='handlerValue'
           PACKAGES=('aaa','bbb');
  describe function nameValue(a, b);
  '''
# ---
# name: test_createProcedure
  '''
  use database databaseValue;
  use schema schemaValue;
  use warehouse warehouseValue;
  
  CREATE OR REPLACE  PROCEDURE nameValue(string a, variant b)
           RETURNS returnTypeValue
           LANGUAGE PYTHON
           RUNTIME_VERSION=3.8
           IMPORTS=('import1, import2')
           HANDLER='handlerValue'
           PACKAGES=('aaa','bbb')
           EXECUTE AS CALLER;
  
  
  describe PROCEDURE nameValue(a, b);
  '''
# ---
# name: test_createStage
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  
  create stage if not exists nameValue;
  '''
# ---
# name: test_createStreamlit
  '''
  use role roleValue;
  use database databaseValue;
  use schema schemaValue;
  use warehouse warehouseValue;
  
  create streamlit nameValue
    
    MAIN_FILE = 'fileValue'
    QUERY_WAREHOUSE = warehouseValue;
  
  show streamlits;
  describe streamlit nameValue;
  
  alter streamlit nameValue checkout;
  '''
# ---
# name: test_createStreamlitFromStage
  '''
  use role roleValue;
  use database databaseValue;
  use schema schemaValue;
  use warehouse warehouseValue;
  
  create streamlit nameValue
    FROM @stageValue
    MAIN_FILE = 'fileValue'
    QUERY_WAREHOUSE = warehouseValue;
  
  show streamlits;
  describe streamlit nameValue;
  
  alter streamlit nameValue checkout;
  '''
# ---
# name: test_deployStreamlit
  '''
  use database databaseValue;
  use schema schemaValue;
  use role roleValue;
  
  CALL SYSTEM$GENERATE_STREAMLIT_URL_FROM_NAME('nameValue');
  '''
# ---
# name: test_describeFunction
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  desc FUNCTION signatureValue;
  '''
# ---
# name: test_describeProcedure
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  desc PROCEDURE signatureValue;
  '''
# ---
# name: test_describeStreamlit
  '''
  use database databaseValue;
  use schema schemaValue;
  use role roleValue;
  
  CALL SYSTEM$GENERATE_STREAMLIT_URL_FROM_NAME('nameValue');
  '''
# ---
# name: test_dropFunction
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  drop function signatureValue;
  '''
# ---
# name: test_dropProcedure
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  drop procedure signatureValue;
  '''
# ---
# name: test_dropStage
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  
  drop stage nameValue;
  '''
# ---
# name: test_dropStreamlit
  '''
  use role roleValue;
  use database databaseValue;
  use schema schemaValue;
  use warehouse warehouseValue;
  drop streamlit "nameValue";
  '''
# ---
# name: test_executeFunction
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  select functionValue;
  '''
# ---
# name: test_executeProcedure
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  call procedureValue;
  '''
# ---
# name: test_getStage[namedStageValue]
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  
  get @namedStageValue file://pathValue/
  '''
# ---
# name: test_getStage[snow://embeddedStageValue]
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  
  get snow://embeddedStageValue file://pathValue/
  '''
# ---
# name: test_listFunctions
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  show user functions like 'likeValue';
  select "name", "created_on", "arguments", "language" from table(result_scan(last_query_id()));
  '''
# ---
# name: test_listProcedures
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  show user procedures like 'likeValue';
  select "name", "created_on", "arguments" from table(result_scan(last_query_id()));
  '''
# ---
# name: test_listStage[namedStageValue]
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  ls @namedStageValue;
  '''
# ---
# name: test_listStage[snow://embeddedStageValue]
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  ls snow://embeddedStageValue;
  '''
# ---
# name: test_listStages
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  show stages;
  '''
# ---
# name: test_listStreamlits
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  show streamlits;
  '''
# ---
# name: test_putStage[namedStageValue]
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  
  put file://pathValue @namedStageValue auto_compress=false parallel=parallelValue overwrite=True;
  '''
# ---
# name: test_putStage[snow://embeddedStageValue]
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  
  put file://pathValue snow://embeddedStageValue auto_compress=false parallel=parallelValue overwrite=True;
  '''
# ---
# name: test_removeFromStage[namedStageValue]
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  
  remove @namedStageValue/pathValue
  '''
# ---
# name: test_removeFromStage[snow://embeddedStageValue]
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  
  remove snow://embeddedStageValue/pathValue
  '''
# ---
# name: test_setProcedureComment
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  alter PROCEDURE signatureValue SET COMMENT = $$commentValue$$;
  '''
# ---
# name: test_shareStreamlit
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  
  grant usage on streamlit nameValue to role to_roleValue;
  '''
# ---
# name: test_showWarehouses
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  show warehouses;
  '''
# ---
