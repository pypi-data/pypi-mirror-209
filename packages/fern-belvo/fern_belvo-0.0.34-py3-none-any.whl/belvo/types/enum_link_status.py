# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class EnumLinkStatus(str, enum.Enum):
    """
    The current status of the link. For more information, see our [Link](https://developers.belvo.com/docs/links-and-institutions#links) article in the devportal.
    We return one of the following values:
      - `valid`
      - `invalid`
      - `unconfirmed`
      - `token_required`
    """

    VALID = "valid"
    INVALID = "invalid"
    UNCONFIRMED = "unconfirmed"
    TOKEN_REQUIRED = "token_required"

    def visit(
        self,
        valid: typing.Callable[[], T_Result],
        invalid: typing.Callable[[], T_Result],
        unconfirmed: typing.Callable[[], T_Result],
        token_required: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is EnumLinkStatus.VALID:
            return valid()
        if self is EnumLinkStatus.INVALID:
            return invalid()
        if self is EnumLinkStatus.UNCONFIRMED:
            return unconfirmed()
        if self is EnumLinkStatus.TOKEN_REQUIRED:
            return token_required()
