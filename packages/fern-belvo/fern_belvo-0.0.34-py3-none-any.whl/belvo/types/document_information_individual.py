# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class DocumentInformationIndividual(pydantic.BaseModel):
    """
    Object containing detailed information about the fiscal document.
    """

    name: str = pydantic.Field(description=("The name of the tax document.\n"))
    type: str = pydantic.Field(
        description=("The type of tax declaration form. For DIAN, this will be either `110` or `210`.\n")
    )
    form_number: str = pydantic.Field(description=("Institution-provided identifier for the tax declaration.\n"))
    year: typing.Optional[int] = pydantic.Field(description=("The year of this tax declaration.\n"))

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
