# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class SecretKeys(pydantic.BaseModel):
    id: str = pydantic.Field(description=("Belvo's unique ID for the Payments API `secretId`.\n"))
    password: str = pydantic.Field(description=("Your Payments API `secretPassword`. This value is obfuscated.\n"))
    created_at: str = pydantic.Field(description=("The ISO-8601 timestamp of when the secret key was created.\n"))
    last_used: str = pydantic.Field(description=("The ISO-8601 timestamp of when the secret key was last used.\n"))

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
