# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class EnumInvestmentPortfolioInstrumentType(str, enum.Enum):
    """
    The instrument type. For more information about instruments, please see our [Investments DevPortal article](https://developers.belvo.com/docs/investments#instruments).

    We return one of the following values:

      - `BOND`
      - `DEPOSIT`
      - `ETF`
      - `FUND`
      - `OTHER`
      - `PENSION`
      - `STOCK`
    """

    BOND = "BOND"
    DEPOSIT = "DEPOSIT"
    ETF = "ETF"
    FUND = "FUND"
    OTHER = "OTHER"
    PENSION = "PENSION"
    STOCK = "STOCK"

    def visit(
        self,
        bond: typing.Callable[[], T_Result],
        deposit: typing.Callable[[], T_Result],
        etf: typing.Callable[[], T_Result],
        fund: typing.Callable[[], T_Result],
        other: typing.Callable[[], T_Result],
        pension: typing.Callable[[], T_Result],
        stock: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is EnumInvestmentPortfolioInstrumentType.BOND:
            return bond()
        if self is EnumInvestmentPortfolioInstrumentType.DEPOSIT:
            return deposit()
        if self is EnumInvestmentPortfolioInstrumentType.ETF:
            return etf()
        if self is EnumInvestmentPortfolioInstrumentType.FUND:
            return fund()
        if self is EnumInvestmentPortfolioInstrumentType.OTHER:
            return other()
        if self is EnumInvestmentPortfolioInstrumentType.PENSION:
            return pension()
        if self is EnumInvestmentPortfolioInstrumentType.STOCK:
            return stock()
