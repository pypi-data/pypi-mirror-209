# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class EnumTaxRetentionType(str, enum.Enum):
    """
    The type of tax retention in relation to the invoice (from the perspective of the Link owner).

    - `OUTFLOW` relates to a tax retention for a sent invoice.
    - `INFLOW` related to a tax retention for a received invoice.
    """

    OUTFLOW = "OUTFLOW"
    INFLOW = "INFLOW"

    def visit(self, outflow: typing.Callable[[], T_Result], inflow: typing.Callable[[], T_Result]) -> T_Result:
        if self is EnumTaxRetentionType.OUTFLOW:
            return outflow()
        if self is EnumTaxRetentionType.INFLOW:
            return inflow()
