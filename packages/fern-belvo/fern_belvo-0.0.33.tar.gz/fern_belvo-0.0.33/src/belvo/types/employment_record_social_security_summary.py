# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class EmploymentRecordSocialSecuritySummary(pydantic.BaseModel):
    """
    Details regarding the individual's social security contributions.
    """

    weeks_redeemed: typing.Optional[int] = pydantic.Field(
        description=("Number of weeks the individual needed to take out of their pension.\n")
    )
    weeks_reinstated: typing.Optional[int] = pydantic.Field(
        description=(
            "Number of weeks the individual has paid back into their pension (*AFORE*), after having redeemed them previously.\n"
        )
    )
    weeks_contributed: typing.Optional[int] = pydantic.Field(
        description=(
            "Number of weeks the individual has contributed to their social security, based on the number of weeks the individual has worked according to IMSS.\n"
        )
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
