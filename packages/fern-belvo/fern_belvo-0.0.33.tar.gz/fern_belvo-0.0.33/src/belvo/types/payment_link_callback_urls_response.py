# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class PaymentLinkCallbackUrlsResponse(pydantic.BaseModel):
    """
    The URLs that the user should be redirected to.

    **Note:** This field will return an empty object if your integration only generates payment links through the [Belvo Dashboard](https://dashboard.belvo.com/).
    """

    cancel: typing.Optional[str] = pydantic.Field(
        description=(
            "The URL that the user should be redirected to if they decide to cancel the payment process or if an error occurs.\n"
        )
    )
    success: typing.Optional[str] = pydantic.Field(
        description=(
            "The URL that the user should be redirected to when they complete the payment process successfully.\n"
        )
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
