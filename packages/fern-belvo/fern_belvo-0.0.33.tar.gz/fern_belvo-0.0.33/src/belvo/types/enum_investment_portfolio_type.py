# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class EnumInvestmentPortfolioType(str, enum.Enum):
    """
    The portfolio type.

    We return one of the following values:

      - `FIXED_INCOME`
      - `OTHER`
      - `PENSION`
      - `VARIABLE_INCOME`
    """

    FIXED_INCOME = "FIXED_INCOME"
    OTHER = "OTHER"
    PENSION = "PENSION"
    VARIABLE_INCOME = "VARIABLE_INCOME"

    def visit(
        self,
        fixed_income: typing.Callable[[], T_Result],
        other: typing.Callable[[], T_Result],
        pension: typing.Callable[[], T_Result],
        variable_income: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is EnumInvestmentPortfolioType.FIXED_INCOME:
            return fixed_income()
        if self is EnumInvestmentPortfolioType.OTHER:
            return other()
        if self is EnumInvestmentPortfolioType.PENSION:
            return pension()
        if self is EnumInvestmentPortfolioType.VARIABLE_INCOME:
            return variable_income()
