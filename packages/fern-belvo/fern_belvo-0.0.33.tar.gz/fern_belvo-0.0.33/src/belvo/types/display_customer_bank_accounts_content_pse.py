# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .beneficiary_bank_account_pse import BeneficiaryBankAccountPse
from .payment_method_info_customer_bank_accounts_pse import PaymentMethodInfoCustomerBankAccountsPse


class DisplayCustomerBankAccountsContentPse(pydantic.BaseModel):
    """
    Object detailing what payment method information you need to display.
    """

    customer_bank_accounts: typing.Optional[typing.List[PaymentMethodInfoCustomerBankAccountsPse]] = pydantic.Field(
        description=("Array of customer bank account objects.\n")
    )
    beneficiary_bank_account: typing.Optional[BeneficiaryBankAccountPse]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
