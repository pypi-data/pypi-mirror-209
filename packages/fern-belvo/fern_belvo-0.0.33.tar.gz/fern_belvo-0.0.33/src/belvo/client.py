# This file was auto-generated by Fern from our API Definition.

from .environment import BelvoEnvironment
from .resources.accounts.client import AccountsClient, AsyncAccountsClient
from .resources.balances.client import AsyncBalancesClient, BalancesClient
from .resources.bank_accounts.client import AsyncBankAccountsClient, BankAccountsClient
from .resources.categorization.client import AsyncCategorizationClient, CategorizationClient
from .resources.customers.client import AsyncCustomersClient, CustomersClient
from .resources.employment_records.client import AsyncEmploymentRecordsClient, EmploymentRecordsClient
from .resources.income_verification.client import AsyncIncomeVerificationClient, IncomeVerificationClient
from .resources.incomes.client import AsyncIncomesClient, IncomesClient
from .resources.institutions.client import AsyncInstitutionsClient, InstitutionsClient
from .resources.investment_portfolios.client import AsyncInvestmentPortfoliosClient, InvestmentPortfoliosClient
from .resources.invoices.client import AsyncInvoicesClient, InvoicesClient
from .resources.links.client import AsyncLinksClient, LinksClient
from .resources.owners.client import AsyncOwnersClient, OwnersClient
from .resources.payment_institutions.client import AsyncPaymentInstitutionsClient, PaymentInstitutionsClient
from .resources.payment_intents.client import AsyncPaymentIntentsClient, PaymentIntentsClient
from .resources.payment_links.client import AsyncPaymentLinksClient, PaymentLinksClient
from .resources.payment_transactions.client import AsyncPaymentTransactionsClient, PaymentTransactionsClient
from .resources.payment_webhooks.client import AsyncPaymentWebhooksClient, PaymentWebhooksClient
from .resources.receivable_transactions.client import AsyncReceivableTransactionsClient, ReceivableTransactionsClient
from .resources.recurring_expenses.client import AsyncRecurringExpensesClient, RecurringExpensesClient
from .resources.risk_insights.client import AsyncRiskInsightsClient, RiskInsightsClient
from .resources.secret_keys.client import AsyncSecretKeysClient, SecretKeysClient
from .resources.tax_compliance_status.client import AsyncTaxComplianceStatusClient, TaxComplianceStatusClient
from .resources.tax_declarations.client import AsyncTaxDeclarationsClient, TaxDeclarationsClient
from .resources.tax_retentions.client import AsyncTaxRetentionsClient, TaxRetentionsClient
from .resources.tax_returns.client import AsyncTaxReturnsClient, TaxReturnsClient
from .resources.tax_status.client import AsyncTaxStatusClient, TaxStatusClient
from .resources.transactions.client import AsyncTransactionsClient, TransactionsClient


class Belvo:
    def __init__(
        self, *, environment: BelvoEnvironment = BelvoEnvironment.PRODUCTION, secret_id: str, secret_password: str
    ):
        self._environment = environment
        self._secret_id = secret_id
        self._secret_password = secret_password
        self.links = LinksClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.accounts = AccountsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.transactions = TransactionsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.balances = BalancesClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.institutions = InstitutionsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.owners = OwnersClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.invoices = InvoicesClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.tax_returns = TaxReturnsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.tax_status = TaxStatusClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.tax_compliance_status = TaxComplianceStatusClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.incomes = IncomesClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.recurring_expenses = RecurringExpensesClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.investment_portfolios = InvestmentPortfoliosClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.receivable_transactions = ReceivableTransactionsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.risk_insights = RiskInsightsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.tax_retentions = TaxRetentionsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.tax_declarations = TaxDeclarationsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.employment_records = EmploymentRecordsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.income_verification = IncomeVerificationClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.categorization = CategorizationClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.secret_keys = SecretKeysClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.payment_webhooks = PaymentWebhooksClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.payment_institutions = PaymentInstitutionsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.customers = CustomersClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.bank_accounts = BankAccountsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.payment_links = PaymentLinksClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.payment_intents = PaymentIntentsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.payment_transactions = PaymentTransactionsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )


class AsyncBelvo:
    def __init__(
        self, *, environment: BelvoEnvironment = BelvoEnvironment.PRODUCTION, secret_id: str, secret_password: str
    ):
        self._environment = environment
        self._secret_id = secret_id
        self._secret_password = secret_password
        self.links = AsyncLinksClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.accounts = AsyncAccountsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.transactions = AsyncTransactionsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.balances = AsyncBalancesClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.institutions = AsyncInstitutionsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.owners = AsyncOwnersClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.invoices = AsyncInvoicesClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.tax_returns = AsyncTaxReturnsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.tax_status = AsyncTaxStatusClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.tax_compliance_status = AsyncTaxComplianceStatusClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.incomes = AsyncIncomesClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.recurring_expenses = AsyncRecurringExpensesClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.investment_portfolios = AsyncInvestmentPortfoliosClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.receivable_transactions = AsyncReceivableTransactionsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.risk_insights = AsyncRiskInsightsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.tax_retentions = AsyncTaxRetentionsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.tax_declarations = AsyncTaxDeclarationsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.employment_records = AsyncEmploymentRecordsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.income_verification = AsyncIncomeVerificationClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.categorization = AsyncCategorizationClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.secret_keys = AsyncSecretKeysClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.payment_webhooks = AsyncPaymentWebhooksClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.payment_institutions = AsyncPaymentInstitutionsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.customers = AsyncCustomersClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.bank_accounts = AsyncBankAccountsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.payment_links = AsyncPaymentLinksClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.payment_intents = AsyncPaymentIntentsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
        self.payment_transactions = AsyncPaymentTransactionsClient(
            environment=self._environment, secret_id=self._secret_id, secret_password=self._secret_password
        )
