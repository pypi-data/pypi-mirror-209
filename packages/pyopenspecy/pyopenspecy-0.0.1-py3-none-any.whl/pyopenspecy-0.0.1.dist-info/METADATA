Metadata-Version: 2.1
Name: pyopenspecy
Version: 0.0.1
Summary: Add a short description here!
Home-page: https://github.com/pyscaffold/pyscaffold/
Author: Julian Irwin
Author-email: julian.irwin@gmail.com
License: MIT
Project-URL: Documentation, https://pyscaffold.org/
Platform: any
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python
Description-Content-Type: text/markdown; charset=UTF-8; variant=GFM
Requires-Dist: pandas
Requires-Dist: thefuzz
Requires-Dist: importlib-metadata ; python_version < "3.8"
Provides-Extra: testing
Requires-Dist: setuptools ; extra == 'testing'
Requires-Dist: pytest ; extra == 'testing'
Requires-Dist: pytest-cov ; extra == 'testing'

<!-- These are examples of badges you might want to add to your README:
     please update the URLs accordingly

[![Built Status](https://api.cirrus-ci.com/github/<USER>/pyopenspecy.svg?branch=main)](https://cirrus-ci.com/github/<USER>/pyopenspecy)
[![ReadTheDocs](https://readthedocs.org/projects/pyopenspecy/badge/?version=latest)](https://pyopenspecy.readthedocs.io/en/stable/)
[![Coveralls](https://img.shields.io/coveralls/github/<USER>/pyopenspecy/main.svg)](https://coveralls.io/r/<USER>/pyopenspecy)
[![PyPI-Server](https://img.shields.io/pypi/v/pyopenspecy.svg)](https://pypi.org/project/pyopenspecy/)
[![Conda-Forge](https://img.shields.io/conda/vn/conda-forge/pyopenspecy.svg)](https://anaconda.org/conda-forge/pyopenspecy)
[![Monthly Downloads](https://pepy.tech/badge/pyopenspecy/month)](https://pepy.tech/project/pyopenspecy)
[![Twitter](https://img.shields.io/twitter/url/http/shields.io.svg?style=social&label=Twitter)](https://twitter.com/pyopenspecy)
-->

[![Project generated with PyScaffold](https://img.shields.io/badge/-PyScaffold-005CA0?logo=pyscaffold)](https://pyscaffold.org/)

# pyopenspecy

> Quickly grab spectra from Open Specy through python!

`pyopenspecy` allows you to grab specific or random Raman and FTIR spectra from the Open Specy libraries.

# Example

Get a random spectrum

     import pyopenspecy

     spectrum, metadata = pyopenspecy.random_raman_spectrum()


Get a specific spectrum

     spectrum, metadata = pyopenspecy.raman_spectrum_by_id(801)


Fuzzy search for a spectrum by sample material name.

     pyopenspecy.fuzzy_search_raman("Fe O3", limit=10)
