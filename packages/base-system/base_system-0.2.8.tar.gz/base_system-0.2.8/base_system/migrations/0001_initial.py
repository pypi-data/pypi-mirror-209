# Generated by Django 3.2 on 2023-04-27 11:38

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContentTypeCates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='名称')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('order_by', models.IntegerField(default=1, null=True, verbose_name='排序')),
                ('level', models.IntegerField(blank=True, default=1, null=True, verbose_name='级别')),
                ('icon_class', models.CharField(blank=True, max_length=500, null=True, verbose_name='图标')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='base_system.contenttypecates', verbose_name='父级菜单')),
            ],
            options={
                'verbose_name': '菜单名称',
                'verbose_name_plural': '菜单名称',
                'db_table': 'bs_content_type_cats',
                'ordering': ('order_by',),
            },
        ),
        migrations.CreateModel(
            name='DrugCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('codenum', models.CharField(max_length=255, unique=True, verbose_name='编码')),
                ('category_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='类别名称')),
            ],
            options={
                'verbose_name': '药品类别',
                'verbose_name_plural': '药品类别',
                'db_table': 'bs_drug_category',
            },
        ),
        migrations.CreateModel(
            name='DrugPreparationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('codenum', models.CharField(max_length=255, unique=True, verbose_name='编码')),
                ('type_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='类型名称')),
            ],
            options={
                'verbose_name': '药品制剂类型',
                'verbose_name_plural': '药品制剂类型',
                'db_table': 'bs_drug_preparation_type',
            },
        ),
        migrations.CreateModel(
            name='DrugType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('code', models.CharField(max_length=255, unique=True, verbose_name='编码')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='名称')),
            ],
            options={
                'verbose_name': '药品类型',
                'verbose_name_plural': '药品类型',
                'db_table': 'bs_drug_type',
            },
        ),
        migrations.CreateModel(
            name='ExaminationDictionaries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('project_code', models.CharField(max_length=255, unique=True, verbose_name='项目编码')),
                ('project_name', models.CharField(max_length=64, verbose_name='项目名称')),
                ('hospital_code', models.CharField(max_length=128, verbose_name='医院编码')),
                ('office_code', models.CharField(max_length=128, verbose_name='科室编码')),
                ('project_fees', models.FloatField(null=True, verbose_name='项目费用')),
                ('remarks', models.CharField(blank=True, max_length=128, null=True, verbose_name='备注')),
                ('distinguish', models.CharField(blank=True, max_length=128, null=True, verbose_name='区分字段')),
                ('code_srvtp', models.CharField(max_length=50, null=True, verbose_name='检验类型编码')),
                ('name_srvtp', models.CharField(max_length=50, null=True, verbose_name='检验类型名称')),
            ],
            options={
                'verbose_name': '检验字典',
                'verbose_name_plural': '检验字典',
                'db_table': 'bs_examination_dictionaries',
            },
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='联系方式')),
                ('introduce', models.TextField(blank=True, null=True, verbose_name='医院简介')),
                ('codenum', models.CharField(max_length=255, unique=True, verbose_name='编码')),
                ('address', models.TextField(verbose_name='医院地址')),
                ('longitude', models.FloatField(verbose_name='经度')),
                ('latitude', models.FloatField(verbose_name='维度')),
                ('hos_images', models.CharField(blank=True, default='hospital_images', max_length=100, verbose_name='医院图片')),
                ('logo', models.CharField(default='hospital_logo', max_length=100, verbose_name='logo')),
                ('created_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='创建人')),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='更新人')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base_system.hospital', verbose_name='所属医院')),
            ],
            options={
                'verbose_name': '医院',
                'verbose_name_plural': '医院',
                'db_table': 'bs_hospital',
            },
        ),
        migrations.CreateModel(
            name='InspectionDictionaries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('project_code', models.CharField(max_length=255, unique=True, verbose_name='项目编码')),
                ('project_name', models.CharField(max_length=64, verbose_name='项目名称')),
                ('hospital_code', models.CharField(max_length=128, verbose_name='医院编码')),
                ('office_code', models.CharField(max_length=128, verbose_name='科室编码')),
                ('project_fees', models.FloatField(null=True, verbose_name='项目费用')),
                ('remarks', models.CharField(blank=True, max_length=128, null=True, verbose_name='备注')),
                ('distinguish', models.CharField(blank=True, max_length=128, null=True, verbose_name='区分字段')),
                ('code_srvtp', models.CharField(max_length=50, null=True, verbose_name='检查类型编码')),
                ('name_srvtp', models.CharField(max_length=50, null=True, verbose_name='检查类型名称')),
            ],
            options={
                'verbose_name': '检查字典',
                'verbose_name_plural': '检查字典',
                'db_table': 'bs_inspection_dictionaries',
            },
        ),
        migrations.CreateModel(
            name='PharmacyEnterprise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('code', models.CharField(max_length=255, unique=True, verbose_name='编码')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='名称')),
            ],
            options={
                'verbose_name': '药企管理',
                'verbose_name_plural': '药企管理',
                'db_table': 'bs_pharmacy_enterprise',
            },
        ),
        migrations.CreateModel(
            name='PharmacyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('code', models.CharField(max_length=255, unique=True, verbose_name='编码')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='名称')),
            ],
            options={
                'verbose_name': '药房类型',
                'verbose_name_plural': '药房类型',
                'db_table': 'bs_pharmacy_type',
            },
        ),
        migrations.CreateModel(
            name='PositionTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('codenum', models.CharField(max_length=255, verbose_name='职称编码')),
                ('created_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='创建人')),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='更新人')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base_system.hospital', verbose_name='所属医院')),
            ],
            options={
                'verbose_name': '职称',
                'verbose_name_plural': '职称',
                'db_table': 'bs_position_title',
                'unique_together': {('codenum', 'hospital')},
            },
        ),
        migrations.CreateModel(
            name='PharmacyManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('pharmacy_code', models.CharField(max_length=255, unique=True, verbose_name='药房编码')),
                ('pharmacy_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='药房名称')),
                ('address', models.TextField(blank=True, null=True, verbose_name='药房地址')),
                ('enterprise', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base_system.pharmacyenterprise', verbose_name='所属药企')),
                ('hospital', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base_system.hospital', verbose_name='所属医院')),
                ('pharmacy_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='base_system.pharmacytype', verbose_name='药房类型')),
            ],
            options={
                'verbose_name': '药房管理',
                'verbose_name_plural': '药房管理',
                'db_table': 'bs_pharmacy_management',
            },
        ),
        migrations.CreateModel(
            name='PharmacyDrug',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('drug_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='药品编码')),
                ('drug_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='药品名称')),
                ('standards', models.CharField(blank=True, max_length=64, null=True, verbose_name='规格')),
                ('units', models.CharField(blank=True, max_length=64, null=True, verbose_name='单位')),
                ('origin_place', models.CharField(blank=True, max_length=500, null=True, verbose_name='产地')),
                ('manufacturer', models.CharField(blank=True, max_length=200, null=True, verbose_name='生产厂家')),
                ('valid_date', models.DateField(auto_now=True, null=True, verbose_name='有效日期')),
                ('inventory_quantity', models.IntegerField(default=0, null=True, verbose_name='库存数量')),
                ('measurement_unit', models.CharField(blank=True, max_length=64, null=True, verbose_name='计量单位')),
                ('cost_unit_price', models.FloatField(null=True, verbose_name='成本单价')),
                ('cost_amount', models.FloatField(null=True, verbose_name='成本金额')),
                ('retail_unit_price', models.FloatField(null=True, verbose_name='零售单价')),
                ('retail_amount', models.FloatField(null=True, verbose_name='零售金额')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='base_system.drugcategory', verbose_name='类别')),
                ('drug_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='base_system.drugtype', verbose_name='药品类型')),
                ('hospital', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base_system.hospital', verbose_name='所属医院')),
                ('pharmacy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base_system.pharmacymanagement', verbose_name='所属药房')),
                ('preparation_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='base_system.drugpreparationtype', verbose_name='制剂类型')),
            ],
            options={
                'verbose_name': '药房-药品',
                'verbose_name_plural': '药房-药品',
                'db_table': 'bs_pharmacy_drug',
            },
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='科室位置')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='联系方式')),
                ('codenum', models.CharField(max_length=255, verbose_name='科室编码')),
                ('office_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='类型')),
                ('introduce', models.TextField(blank=True, null=True, verbose_name='科室简介')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base_system.hospital', verbose_name='所属医院')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base_system.office', verbose_name='上级科室')),
            ],
            options={
                'verbose_name': '科室',
                'verbose_name_plural': '科室',
                'db_table': 'bs_office',
                'unique_together': {('codenum', 'hospital')},
            },
        ),
        migrations.CreateModel(
            name='InspectionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('code_srvtp', models.CharField(max_length=50, verbose_name='检查类型编码')),
                ('name_srvtp', models.CharField(max_length=50, verbose_name='检查类型名称')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='base_system.inspectiontype', verbose_name='父级')),
            ],
            options={
                'verbose_name': '检查字典类型',
                'verbose_name_plural': '检查字典类型',
                'db_table': 'bs_inspection_type',
            },
        ),
        migrations.CreateModel(
            name='ExtraGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_code', models.CharField(max_length=50, unique=True, verbose_name='角色代码')),
                ('role_name', models.CharField(max_length=50, verbose_name='角色名称')),
                ('is_active', models.BooleanField(default=True, null=True, verbose_name='是否启用')),
                ('note', models.CharField(blank=True, max_length=50, null=True, verbose_name='描述')),
                ('order_by', models.IntegerField(default=1, null=True, verbose_name='排序')),
                ('created_user', models.CharField(blank=True, max_length=50, null=True, verbose_name='创建人')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='最后更新时间')),
                ('group', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extra_group', to='auth.group')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='base_system.hospital', verbose_name='所属医院')),
            ],
            options={
                'verbose_name': '角色',
                'verbose_name_plural': '角色',
                'db_table': 'bs_extra_group',
            },
        ),
        migrations.CreateModel(
            name='ExaminationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('code_srvtp', models.CharField(max_length=50, verbose_name='检查类型编码')),
                ('name_srvtp', models.CharField(max_length=50, verbose_name='检查类型名称')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='base_system.examinationtype', verbose_name='父级')),
            ],
            options={
                'verbose_name': '检验字典类型',
                'verbose_name_plural': '检验字典类型',
                'db_table': 'bs_examination_type',
            },
        ),
        migrations.CreateModel(
            name='DrugDirectory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('drug_code', models.CharField(max_length=255, unique=True, verbose_name='药品编码')),
                ('drug_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='药品名称')),
                ('standards', models.CharField(blank=True, max_length=64, null=True, verbose_name='规格')),
                ('total_unit', models.CharField(blank=True, max_length=64, null=True, verbose_name='基本单位')),
                ('total_unit_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='总量单位编码')),
                ('unit_dose', models.CharField(blank=True, max_length=20, null=True, verbose_name='单位剂量')),
                ('measure_unit', models.CharField(blank=True, max_length=20, null=True, verbose_name='计量/零售单位')),
                ('measure_unit_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='计量单位编码')),
                ('stock_left', models.CharField(blank=True, max_length=20, null=True, verbose_name='库存数量')),
                ('stock_unit', models.CharField(blank=True, max_length=20, null=True, verbose_name='库存单位')),
                ('mic', models.CharField(blank=True, max_length=20, null=True, verbose_name='医保类别')),
                ('rcc_category', models.CharField(blank=True, max_length=20, null=True, verbose_name='农合类别')),
                ('is_essential', models.BooleanField(default=True, verbose_name='是否是基药')),
                ('hr_level', models.CharField(blank=True, max_length=64, null=True, verbose_name='高危等级')),
                ('gb_code', models.CharField(blank=True, max_length=64, null=True, verbose_name='国家贯标编码')),
                ('gb_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='国家贯标名称')),
                ('origin_place', models.CharField(blank=True, max_length=64, null=True, verbose_name='产地')),
                ('manufacturer', models.CharField(blank=True, max_length=64, null=True, verbose_name='生产厂家')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='base_system.drugcategory', verbose_name='类别')),
                ('drug_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='base_system.drugtype', verbose_name='药品类型')),
                ('preparation_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='base_system.drugpreparationtype', verbose_name='制剂类型')),
            ],
            options={
                'verbose_name': '药品目录',
                'verbose_name_plural': '药品目录',
                'db_table': 'bs_drug_directory',
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('name', models.CharField(max_length=20, verbose_name='名称')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='联系方式')),
                ('email', models.CharField(blank=True, max_length=100, null=True, verbose_name='邮箱')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='地址')),
                ('codenum', models.CharField(max_length=64, verbose_name='工号')),
                ('position', models.CharField(blank=True, max_length=20, null=True, verbose_name='职位')),
                ('gender', models.CharField(blank=True, choices=[('1', '男'), ('0', '女')], max_length=2, null=True, verbose_name='性别')),
                ('nation', models.CharField(blank=True, max_length=10, null=True, verbose_name='民族')),
                ('idnum', models.CharField(blank=True, max_length=100, null=True, verbose_name='身份证号')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='出生日期')),
                ('photo', models.CharField(default='doctor_photo', max_length=10, verbose_name='医生照片')),
                ('describe', models.TextField(blank=True, null=True, verbose_name='医生描述')),
                ('created_by', models.CharField(blank=True, max_length=20, null=True, verbose_name='创建人')),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新人')),
                ('is_online_consult', models.BooleanField(default=True, verbose_name='是否互联网接诊')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base_system.hospital', verbose_name='所属医院')),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base_system.office', verbose_name='所属科室')),
                ('position_title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base_system.positiontitle', verbose_name='职称')),
            ],
            options={
                'verbose_name': '医生表',
                'verbose_name_plural': '医生表',
                'db_table': 'bs_doctor',
            },
        ),
        migrations.CreateModel(
            name='ContentTypeEx',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, null=True, verbose_name='名称')),
                ('icon_class', models.CharField(blank=True, max_length=500, null=True, verbose_name='图标')),
                ('front_url', models.TextField(blank=True, null=True, verbose_name='url')),
                ('front_component', models.TextField(blank=True, null=True, verbose_name='组成')),
                ('front_params', models.CharField(max_length=50, null=True, verbose_name='参数')),
                ('front_redirect_url', models.URLField(null=True, verbose_name='重定向')),
                ('is_active', models.BooleanField(default=True, null=True, verbose_name='是否启用')),
                ('order_by', models.IntegerField(default=1, null=True, verbose_name='排序')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extension', to='contenttypes.contenttype', verbose_name='系统应用')),
                ('content_type_cat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_cates', to='base_system.contenttypecates', verbose_name='菜单')),
            ],
            options={
                'verbose_name': '功能类别补充',
                'verbose_name_plural': '功能类别补充',
                'db_table': 'bs_content_type_ex',
                'ordering': ('order_by',),
            },
        ),
        migrations.CreateModel(
            name='ApiInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('org_code', models.CharField(max_length=50, verbose_name='医院编码')),
                ('req_code', models.CharField(max_length=50, verbose_name='请求编码')),
                ('req_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='请求名称')),
                ('req_method', models.CharField(max_length=50, verbose_name='请求方式')),
                ('content_type', models.CharField(max_length=50, verbose_name='请求数据类型')),
                ('ip_domain', models.CharField(max_length=200, verbose_name='ip地址或域名')),
                ('front_url', models.CharField(max_length=200, verbose_name='请求路由')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
            ],
            options={
                'verbose_name': '接口信息',
                'verbose_name_plural': '接口信息',
                'db_table': 'bs_api_info',
                'unique_together': {('org_code', 'req_code')},
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='联系方式')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='出生日期')),
                ('gender', models.CharField(blank=True, choices=[('1', '男'), ('0', '女')], max_length=2, null=True, verbose_name='性别')),
                ('idcardnum', models.CharField(blank=True, max_length=100, null=True, verbose_name='身份证号')),
                ('order_by', models.IntegerField(blank=True, default=1, null=True, verbose_name='排序')),
                ('avatar_url', models.CharField(default='user_avatar', max_length=100, verbose_name='用户头像')),
                ('default_group_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='默认角色')),
                ('allow_office', models.CharField(blank=True, max_length=255, null=True, verbose_name='可操作科室')),
                ('note', models.TextField(blank=True, null=True, verbose_name='注释说明')),
                ('created_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='创建人')),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='更新人')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base_system.doctor', verbose_name='绑定医生')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('hospital', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base_system.hospital', verbose_name='所属医院')),
                ('office', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base_system.office', verbose_name='所属科室')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户信息',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.RunSQL(
            """
            INSERT INTO base_system_user(id, username, first_name, last_name, email, is_staff, is_active, date_joined, name, password, last_login, is_superuser, phone, birthday, gender, idcardnum, order_by, avatar_url, default_group_id, allow_office, note, created_by, created_time, updated_time, hospital_id, office_id, updated_by, doctor_id)
            VALUES (1, 'admin', '', '', 'admin@admin.com', FALSE, TRUE, '2023-02-13 10:22:39', '管理员', 'pbkdf2_sha256$260000$eR3ouH02QKSmOTLN0Y2vsL$rx5zmoAR0PgQ2fB6l5gKLCvLPxkw2NtBsTDXQO7iIT8=', '2022-09-08', TRUE, NULL, '2023-04-28', NULL, NULL, 1, 'user_avatar', NULL, NULL, NULL, NULL, '2022-09-08 16:32:24', '2023-03-23 09:54:21', NULL, NULL, NULL, NULL);
            """
        ),
        migrations.CreateModel(
            name='ExpenseStandard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('expense_type', models.CharField(max_length=100, null=True, verbose_name='费用类型')),
                ('standard_name', models.CharField(max_length=100, verbose_name='标准名称')),
                ('standard_code', models.CharField(max_length=255, verbose_name='标准编码')),
                ('fees', models.FloatField(null=True, verbose_name='费用')),
                ('created_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='创建人')),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='更新人')),
                ('doctors', models.ManyToManyField(blank=True, to='base_system.Doctor', verbose_name='医生费用标准')),
                ('hospital', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base_system.hospital', verbose_name='所属医院')),
            ],
            options={
                'verbose_name': '费用标准表',
                'verbose_name_plural': '费用标准表',
                'db_table': 'bs_expense_standard',
                'unique_together': {('standard_code', 'hospital')},
            },
        ),
    ]
