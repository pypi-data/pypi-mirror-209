# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'QMainMenuView.ui'
##
## Created by: Qt User Interface Compiler version 6.4.2
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QApplication, QHBoxLayout, QMainWindow, QMenu,
    QMenuBar, QSizePolicy, QStatusBar, QToolBar,
    QWidget)
class Ui_mainMenu(object):
    def setupUi(self, mainMenu):
        if not mainMenu.objectName():
            mainMenu.setObjectName(u"mainMenu")
        mainMenu.setEnabled(True)
        mainMenu.resize(1085, 806)
        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(mainMenu.sizePolicy().hasHeightForWidth())
        mainMenu.setSizePolicy(sizePolicy)
        mainMenu.setMinimumSize(QSize(792, 117))
        mainMenu.setSizeIncrement(QSize(0, 0))
        mainMenu.setFocusPolicy(Qt.ClickFocus)
        mainMenu.setAutoFillBackground(False)
        mainMenu.setUnifiedTitleAndToolBarOnMac(False)
        self.actionLoad = QAction(mainMenu)
        self.actionLoad.setObjectName(u"actionLoad")
        self.actionLoad.setChecked(False)
        self.actionLoad.setEnabled(True)
        icon = QIcon()
        icon.addFile(u":/PNG/black/32/folder-open.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionLoad.setIcon(icon)
        self.actionLoad.setAutoRepeat(False)
        self.actionLoad.setVisible(True)
        self.actionLoad.setIconVisibleInMenu(True)
        self.actionSave = QAction(mainMenu)
        self.actionSave.setObjectName(u"actionSave")
        self.actionSave.setCheckable(False)
        self.actionSave.setChecked(False)
        icon1 = QIcon()
        icon1.addFile(u":/PNG/black/32/floppy-disk.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionSave.setIcon(icon1)
        self.actionSave_As = QAction(mainMenu)
        self.actionSave_As.setObjectName(u"actionSave_As")
        self.actionSave_As.setIcon(icon1)
        self.actionAbout = QAction(mainMenu)
        self.actionAbout.setObjectName(u"actionAbout")
        icon2 = QIcon()
        icon2.addFile(u":/PNG/black/32/information.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAbout.setIcon(icon2)
        self.actionHelp = QAction(mainMenu)
        self.actionHelp.setObjectName(u"actionHelp")
        icon3 = QIcon()
        icon3.addFile(u":/PNG/black/32/question_mark.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionHelp.setIcon(icon3)
        self.actionWebsite = QAction(mainMenu)
        self.actionWebsite.setObjectName(u"actionWebsite")
        self.actionSingle = QAction(mainMenu)
        self.actionSingle.setObjectName(u"actionSingle")
        icon4 = QIcon()
        icon4.addFile(u":/PNG/black/32/circled_border_triangle_right.png", QSize(), QIcon.Normal, QIcon.Off)
        icon4.addFile(u":/PNG/green/32/circled_border_triangle_right.png", QSize(), QIcon.Normal, QIcon.On)
        self.actionSingle.setIcon(icon4)
        self.actionSequencer = QAction(mainMenu)
        self.actionSequencer.setObjectName(u"actionSequencer")
        icon5 = QIcon()
        icon5.addFile(u":/PNG/black/32/circled_list.png", QSize(), QIcon.Normal, QIcon.Off)
        icon5.addFile(u":/PNG/green/32/circled_next.png", QSize(), QIcon.Normal, QIcon.On)
        self.actionSequencer.setIcon(icon5)
        self.actionPreferences = QAction(mainMenu)
        self.actionPreferences.setObjectName(u"actionPreferences")
        icon6 = QIcon()
        icon6.addFile(u":/PNG/black/32/cog.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionPreferences.setIcon(icon6)
        self.actionExit = QAction(mainMenu)
        self.actionExit.setObjectName(u"actionExit")
        self.actionApp = QAction(mainMenu)
        self.actionApp.setObjectName(u"actionApp")
        icon7 = QIcon()
        icon7.addFile(u":/PNG/black/32/rocket.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionApp.setIcon(icon7)
        self.actionSParameter = QAction(mainMenu)
        self.actionSParameter.setObjectName(u"actionSParameter")
        icon8 = QIcon()
        icon8.addFile(u":/PNG/black/32/circled_next.png", QSize(), QIcon.Normal, QIcon.Off)
        icon8.addFile(u":/PNG/green/32/circled_border_triangle_right.png", QSize(), QIcon.Normal, QIcon.On)
        self.actionSParameter.setIcon(icon8)
        self.centralwidget = QWidget(mainMenu)
        self.centralwidget.setObjectName(u"centralwidget")
        self.horizontalLayout = QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName(u"horizontalLayout")
        mainMenu.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(mainMenu)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 1085, 22))
        self.menuFile = QMenu(self.menubar)
        self.menuFile.setObjectName(u"menuFile")
        self.menuHelp = QMenu(self.menubar)
        self.menuHelp.setObjectName(u"menuHelp")
        self.menuRun = QMenu(self.menubar)
        self.menuRun.setObjectName(u"menuRun")
        mainMenu.setMenuBar(self.menubar)
        self.statusbar = QStatusBar(mainMenu)
        self.statusbar.setObjectName(u"statusbar")
        mainMenu.setStatusBar(self.statusbar)
        self.toolBar = QToolBar(mainMenu)
        self.toolBar.setObjectName(u"toolBar")
        self.toolBar.setEnabled(True)
        sizePolicy1 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Fixed)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.toolBar.sizePolicy().hasHeightForWidth())
        self.toolBar.setSizePolicy(sizePolicy1)
        self.toolBar.setFocusPolicy(Qt.StrongFocus)
        self.toolBar.setAutoFillBackground(False)
        self.toolBar.setAllowedAreas(Qt.BottomToolBarArea|Qt.LeftToolBarArea|Qt.TopToolBarArea)
        self.toolBar.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        mainMenu.addToolBar(Qt.TopToolBarArea, self.toolBar)

        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuRun.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.menuFile.addAction(self.actionLoad)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSave_As)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionPreferences)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionHelp)
        self.menuHelp.addAction(self.actionWebsite)
        self.menuRun.addAction(self.actionSParameter)
        self.menuRun.addAction(self.actionSingle)
        self.menuRun.addSeparator()
        self.menuRun.addAction(self.actionSequencer)
        self.menuRun.addAction(self.actionApp)
        self.toolBar.addAction(self.actionLoad)
        self.toolBar.addAction(self.actionSave)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionSequencer)
        self.toolBar.addAction(self.actionApp)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionPreferences)
        self.toolBar.addAction(self.actionHelp)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionSParameter)
        self.toolBar.addAction(self.actionSingle)

        self.retranslateUi(mainMenu)

        QMetaObject.connectSlotsByName(mainMenu)
    # setupUi

    def retranslateUi(self, mainMenu):
        mainMenu.setWindowTitle(QCoreApplication.translate("mainMenu", u"mainMenu", None))
        self.actionLoad.setText(QCoreApplication.translate("mainMenu", u"Load...", None))
#if QT_CONFIG(statustip)
        self.actionLoad.setStatusTip(QCoreApplication.translate("mainMenu", u"Load Previous Settings", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionLoad.setShortcut(QCoreApplication.translate("mainMenu", u"Ctrl+O", None))
#endif // QT_CONFIG(shortcut)
        self.actionSave.setText(QCoreApplication.translate("mainMenu", u"Save", None))
#if QT_CONFIG(tooltip)
        self.actionSave.setToolTip(QCoreApplication.translate("mainMenu", u"Save Settings", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionSave.setStatusTip(QCoreApplication.translate("mainMenu", u"Save Current Settings", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionSave.setShortcut(QCoreApplication.translate("mainMenu", u"Ctrl+S", None))
#endif // QT_CONFIG(shortcut)
        self.actionSave_As.setText(QCoreApplication.translate("mainMenu", u"Save As...", None))
#if QT_CONFIG(statustip)
        self.actionSave_As.setStatusTip(QCoreApplication.translate("mainMenu", u"Save Current Settings As...", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionSave_As.setShortcut(QCoreApplication.translate("mainMenu", u"Ctrl+Shift+S", None))
#endif // QT_CONFIG(shortcut)
        self.actionAbout.setText(QCoreApplication.translate("mainMenu", u"About", None))
#if QT_CONFIG(statustip)
        self.actionAbout.setStatusTip(QCoreApplication.translate("mainMenu", u"About this Application", None))
#endif // QT_CONFIG(statustip)
        self.actionHelp.setText(QCoreApplication.translate("mainMenu", u"Help", None))
        self.actionHelp.setIconText(QCoreApplication.translate("mainMenu", u"Help", None))
#if QT_CONFIG(tooltip)
        self.actionHelp.setToolTip(QCoreApplication.translate("mainMenu", u"Help", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionHelp.setStatusTip(QCoreApplication.translate("mainMenu", u"Browse Documentation Online", None))
#endif // QT_CONFIG(statustip)
        self.actionWebsite.setText(QCoreApplication.translate("mainMenu", u"Website", None))
#if QT_CONFIG(statustip)
        self.actionWebsite.setStatusTip(QCoreApplication.translate("mainMenu", u"Visit Application Website Online", None))
#endif // QT_CONFIG(statustip)
        self.actionSingle.setText(QCoreApplication.translate("mainMenu", u"Single", None))
#if QT_CONFIG(tooltip)
        self.actionSingle.setToolTip(QCoreApplication.translate("mainMenu", u"Single Measurement", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionSingle.setShortcut(QCoreApplication.translate("mainMenu", u"Ctrl+2", None))
#endif // QT_CONFIG(shortcut)
        self.actionSequencer.setText(QCoreApplication.translate("mainMenu", u"Sequencer", None))
#if QT_CONFIG(tooltip)
        self.actionSequencer.setToolTip(QCoreApplication.translate("mainMenu", u"Run Sequencer", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionSequencer.setShortcut(QCoreApplication.translate("mainMenu", u"Ctrl+3", None))
#endif // QT_CONFIG(shortcut)
        self.actionPreferences.setText(QCoreApplication.translate("mainMenu", u"Preferences", None))
#if QT_CONFIG(statustip)
        self.actionPreferences.setStatusTip(QCoreApplication.translate("mainMenu", u"Edit System Preferences", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionPreferences.setShortcut(QCoreApplication.translate("mainMenu", u"Ctrl+,", None))
#endif // QT_CONFIG(shortcut)
        self.actionExit.setText(QCoreApplication.translate("mainMenu", u"Exit", None))
#if QT_CONFIG(statustip)
        self.actionExit.setStatusTip(QCoreApplication.translate("mainMenu", u"Exit the Application", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionExit.setShortcut(QCoreApplication.translate("mainMenu", u"Ctrl+Q", None))
#endif // QT_CONFIG(shortcut)
        self.actionApp.setText(QCoreApplication.translate("mainMenu", u"App", None))
#if QT_CONFIG(shortcut)
        self.actionApp.setShortcut(QCoreApplication.translate("mainMenu", u"Ctrl+A", None))
#endif // QT_CONFIG(shortcut)
        self.actionSParameter.setText(QCoreApplication.translate("mainMenu", u"S-Parameter", None))
#if QT_CONFIG(tooltip)
        self.actionSParameter.setToolTip(QCoreApplication.translate("mainMenu", u"S-Parameter Model", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionSParameter.setShortcut(QCoreApplication.translate("mainMenu", u"Ctrl+1", None))
#endif // QT_CONFIG(shortcut)
        self.menuFile.setTitle(QCoreApplication.translate("mainMenu", u"File", None))
        self.menuHelp.setTitle(QCoreApplication.translate("mainMenu", u"Help", None))
        self.menuRun.setTitle(QCoreApplication.translate("mainMenu", u"Run", None))
        self.toolBar.setWindowTitle(QCoreApplication.translate("mainMenu", u"toolBar", None))
    # retranslateUi

