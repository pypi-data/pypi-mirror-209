from _typeshed import Incomplete
from fastapi import Request as Request
from pathlib import Path
from typing import Dict, Iterator, List, Literal, Tuple

templates: Incomplete

def parse_image_dir(root: Path) -> Iterator[Tuple[str, List[str]]]: ...
def write_to_csv(file_path: Path, path: str, group: str, file: str): ...
def index(image_groups: Dict[str, List[str]], report: Path, mode: Literal['sequential', 'individual']): ...
def selector(report: Path): ...
def completed(total_cases: int): ...
def serve(host: str, port: int, images: Path, report: Path, mode: Literal['sequential', 'individual']): ...
def start_server() -> None: ...
